{"version":3,"file":"chunk/1190.a3bea7db.js","mappings":"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","sources":["webpack://@snx-v3/governance/../../node_modules/viem/_esm/accounts/utils/parseAccount.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/contract.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/call.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/errors/getCallError.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/abis.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/solidity.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/abi.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/contract.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/request.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/stateOverride.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/transport.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/rpc/id.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/rpc/http.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/promise/withTimeout.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/rpc.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/wait.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/promise/withRetry.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/buildRequest.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/clients/transports/http.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/clients/transports/createTransport.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/uid.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/errors.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/namehash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/labelhash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/packetToBytes.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/encodeLabelhash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/getAction.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/errors/getContractError.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/readContract.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/ens.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/avatar/utils.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/ens/getEnsText.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/filters/createFilterRequestScope.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/log.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/encodeEventTopics.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/createContractEventFilter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/createEventFilter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/estimateGas.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/fee.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/block.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBlock.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getGasPrice.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/estimateFeesPerGas.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getTransactionCount.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getChainId.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/estimateGas.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/errors/getEstimateGasError.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/promise/withCache.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBlockNumber.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/decodeEventLog.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/parseEventLogs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getLogs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getContractEvents.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getFeeHistory.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/feeHistory.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getFilterChanges.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getProof.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/proof.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getTransaction.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getTransactionReceipt.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/uninstallFilter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/strings.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/signature/hashMessage.js","webpack://@snx-v3/governance/../../constants/contracts.ts","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/encodeDeployData.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/abstract/utils.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/_assert.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/crypto.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/utils.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/_sha2.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/abstract/modular.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/hmac.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/abstract/curve.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/_shortw_utils.js","webpack://@snx-v3/governance/../../node_modules/@noble/curves/esm/secp256k1.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/verifyHash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/signature/serializeSignature.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/data/isBytesEqual.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/regex.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/typedData.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/signature/hashTypedData.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/observe.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/poll.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/watchBlockNumber.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/siwe/parseSiweMessage.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/siwe/verifySiweMessage.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/siwe/validateSiweMessage.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/clients/decorators/public.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/createBlockFilter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/estimateContractGas.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBalance.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBlobBaseFee.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBlockTransactionCount.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getBytecode.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/ens/getEnsAddress.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/ens/getEnsAvatar.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/ens/getEnsName.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/ens/getEnsResolver.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getFilterLogs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getStorageAt.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/getTransactionConfirmations.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/multicall.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/wallet/sendRawTransaction.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/simulateContract.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/verifyMessage.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/verifyTypedData.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/watchBlocks.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/watchContractEvent.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/watchEvent.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/actions/public/watchPendingTransactions.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/clients/createPublicClient.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/clients/createClient.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/chain/extractChain.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/encoding/fromBytes.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/decodeAbiParameters.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/decodeErrorResult.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/decodeFunctionResult.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/encodeAbiParameters.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/encodeFunctionData.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/formatAbiItem.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/abi/getAbiItem.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/address/isAddressEqual.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/chain/getChainContractAddress.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/errors/getNodeError.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/extract.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/toEventSelector.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/toFunctionSelector.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/hashSignature.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/abitype/dist/esm/regex.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/toSignature.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/abitype/dist/esm/human-readable/formatAbiItem.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/normalizeSignature.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/toSignatureHash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/promise/createBatchScheduler.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/stateOverride.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/stringify.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/transaction/assertRequest.js"],"sourcesContent":["export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","export const aggregate3Signature = '0x82ad56cb';\n//# sourceMappingURL=contract.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { multicall3Abi } from '../../constants/abis.js';\nimport { aggregate3Signature } from '../../constants/contract.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ChainDoesNotSupportContract, ClientChainNotConfiguredError, } from '../../errors/chain.js';\nimport { RawContractError, } from '../../errors/contract.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getCallError, } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { createBatchScheduler, } from '../../utils/promise/createBatchScheduler.js';\nimport { serializeStateOverride, } from '../../utils/stateOverride.js';\nimport { assertRequest } from '../../utils/transaction/assertRequest.js';\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call(client, args) {\n    const { account: account_ = client.account, batch = Boolean(client.batch?.multicall), blockNumber, blockTag = 'latest', accessList, blobs, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, ...rest } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    try {\n        assertRequest(args);\n        const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const rpcStateOverride = serializeStateOverride(stateOverride);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            blobs,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerBlobGas,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        if (batch && shouldPerformMulticall({ request }) && !rpcStateOverride) {\n            try {\n                return await scheduleMulticall(client, {\n                    ...request,\n                    blockNumber,\n                    blockTag,\n                });\n            }\n            catch (err) {\n                if (!(err instanceof ClientChainNotConfiguredError) &&\n                    !(err instanceof ChainDoesNotSupportContract))\n                    throw err;\n            }\n        }\n        const response = await client.request({\n            method: 'eth_call',\n            params: rpcStateOverride\n                ? [\n                    request,\n                    block,\n                    rpcStateOverride,\n                ]\n                : [request, block],\n        });\n        if (response === '0x')\n            return { data: undefined };\n        return { data: response };\n    }\n    catch (err) {\n        const data = getRevertErrorData(err);\n        const { offchainLookup, offchainLookupSignature } = await import('../../utils/ccip.js');\n        if (client.ccipRead !== false &&\n            data?.slice(0, 10) === offchainLookupSignature &&\n            to)\n            return { data: await offchainLookup(client, { data, to }) };\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }) {\n    const { data, to, ...request_ } = request;\n    if (!data)\n        return false;\n    if (data.startsWith(aggregate3Signature))\n        return false;\n    if (!to)\n        return false;\n    if (Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0)\n        return false;\n    return true;\n}\nasync function scheduleMulticall(client, args) {\n    const { batchSize = 1024, wait = 0 } = typeof client.batch?.multicall === 'object' ? client.batch.multicall : {};\n    const { blockNumber, blockTag = 'latest', data, multicallAddress: multicallAddress_, to, } = args;\n    let multicallAddress = multicallAddress_;\n    if (!multicallAddress) {\n        if (!client.chain)\n            throw new ClientChainNotConfiguredError();\n        multicallAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'multicall3',\n        });\n    }\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n    const block = blockNumberHex || blockTag;\n    const { schedule } = createBatchScheduler({\n        id: `${client.uid}.${block}`,\n        wait,\n        shouldSplitBatch(args) {\n            const size = args.reduce((size, { data }) => size + (data.length - 2), 0);\n            return size > batchSize * 2;\n        },\n        fn: async (requests) => {\n            const calls = requests.map((request) => ({\n                allowFailure: true,\n                callData: request.data,\n                target: request.to,\n            }));\n            const calldata = encodeFunctionData({\n                abi: multicall3Abi,\n                args: [calls],\n                functionName: 'aggregate3',\n            });\n            const data = await client.request({\n                method: 'eth_call',\n                params: [\n                    {\n                        data: calldata,\n                        to: multicallAddress,\n                    },\n                    block,\n                ],\n            });\n            return decodeFunctionResult({\n                abi: multicall3Abi,\n                args: [calls],\n                functionName: 'aggregate3',\n                data: data || '0x',\n            });\n        },\n    });\n    const [{ returnData, success }] = await schedule({ data, to });\n    if (!success)\n        throw new RawContractError({ data: returnData });\n    if (returnData === '0x')\n        return { data: undefined };\n    return { data: returnData };\n}\nexport function getRevertErrorData(err) {\n    if (!(err instanceof BaseError))\n        return undefined;\n    const error = err.walk();\n    return typeof error?.data === 'object' ? error.data?.data : error.data;\n}\n//# sourceMappingURL=call.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        name: 'target',\n                        type: 'address',\n                    },\n                    {\n                        name: 'allowFailure',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'callData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'calls',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'aggregate3',\n        outputs: [\n            {\n                components: [\n                    {\n                        name: 'success',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'returnData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'returnData',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\nconst universalResolverErrors = [\n    {\n        inputs: [],\n        name: 'ResolverNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ResolverWildcardNotSupported',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ResolverNotContract',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                name: 'returnData',\n                type: 'bytes',\n            },\n        ],\n        name: 'ResolverError',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        name: 'status',\n                        type: 'uint16',\n                    },\n                    {\n                        name: 'message',\n                        type: 'string',\n                    },\n                ],\n                name: 'errors',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'HttpError',\n        type: 'error',\n    },\n];\nexport const universalResolverResolveAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'resolve',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes' },\n            { name: 'data', type: 'bytes' },\n        ],\n        outputs: [\n            { name: '', type: 'bytes' },\n            { name: 'address', type: 'address' },\n        ],\n    },\n    {\n        name: 'resolve',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes' },\n            { name: 'data', type: 'bytes' },\n            { name: 'gateways', type: 'string[]' },\n        ],\n        outputs: [\n            { name: '', type: 'bytes' },\n            { name: 'address', type: 'address' },\n        ],\n    },\n];\nexport const universalResolverReverseAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'reverse',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ type: 'bytes', name: 'reverseName' }],\n        outputs: [\n            { type: 'string', name: 'resolvedName' },\n            { type: 'address', name: 'resolvedAddress' },\n            { type: 'address', name: 'reverseResolver' },\n            { type: 'address', name: 'resolver' },\n        ],\n    },\n    {\n        name: 'reverse',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { type: 'bytes', name: 'reverseName' },\n            { type: 'string[]', name: 'gateways' },\n        ],\n        outputs: [\n            { type: 'string', name: 'resolvedName' },\n            { type: 'address', name: 'resolvedAddress' },\n            { type: 'address', name: 'reverseResolver' },\n            { type: 'address', name: 'resolver' },\n        ],\n    },\n];\nexport const textResolverAbi = [\n    {\n        name: 'text',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'key', type: 'string' },\n        ],\n        outputs: [{ name: '', type: 'string' }],\n    },\n];\nexport const addressResolverAbi = [\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ name: 'name', type: 'bytes32' }],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'coinType', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bytes' }],\n    },\n];\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\nexport const smartAccountAbi = [\n    {\n        name: 'isValidSignature',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'hash', type: 'bytes32' },\n            { name: 'signature', type: 'bytes' },\n        ],\n        outputs: [{ name: '', type: 'bytes4' }],\n    },\n];\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                internalType: 'bytes32',\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes',\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n];\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'allowance',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'decimals',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint8',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transfer',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n];\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'allowance',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'decimals',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint8',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'bytes32',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'bytes32',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transfer',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n];\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'ApprovalForAll',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'getApproved',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'address',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'isApprovedForAll',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'ownerOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'safeTransferFrom',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'safeTransferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'setApprovalForAll',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenByIndex',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'index',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenByIndex',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'index',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenURI',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'tokeId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n];\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposit',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdraw',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        name: 'allowance',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'approve',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'asset',\n        outputs: [\n            {\n                name: 'assetTokenAddress',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'convertToAssets',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'convertToShares',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n        ],\n        name: 'deposit',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'caller',\n                type: 'address',\n            },\n        ],\n        name: 'maxDeposit',\n        outputs: [\n            {\n                name: 'maxAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'caller',\n                type: 'address',\n            },\n        ],\n        name: 'maxMint',\n        outputs: [\n            {\n                name: 'maxShares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'maxRedeem',\n        outputs: [\n            {\n                name: 'maxShares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'maxWithdraw',\n        outputs: [\n            {\n                name: 'maxAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n        ],\n        name: 'mint',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewDeposit',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewMint',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewRedeem',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewWithdraw',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'redeem',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'totalAssets',\n        outputs: [\n            {\n                name: 'totalManagedAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'transfer',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'transferFrom',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'withdraw',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=abis.js.map","// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n    1: 'An `assert` condition failed.',\n    17: 'Arithmetic operation resulted in underflow or overflow.',\n    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n    33: 'Attempted to convert to an invalid type.',\n    34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n    49: 'Performed `.pop()` on an empty array',\n    50: 'Array index is out of bounds.',\n    65: 'Allocated too much memory or created an array which is too large.',\n    81: 'Attempted to call a zero-initialized variable of internal function type.',\n};\nexport const solidityError = {\n    inputs: [\n        {\n            name: 'message',\n            type: 'string',\n        },\n    ],\n    name: 'Error',\n    type: 'error',\n};\nexport const solidityPanic = {\n    inputs: [\n        {\n            name: 'reason',\n            type: 'uint256',\n        },\n    ],\n    name: 'Panic',\n    type: 'error',\n};\n//# sourceMappingURL=solidity.js.map","import { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js';\nimport { size } from '../utils/data/size.js';\nimport { BaseError } from './base.js';\nexport class AbiConstructorNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'A constructor was not found on the ABI.',\n            'Make sure you are using the correct ABI and that the constructor exists on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiConstructorNotFoundError'\n        });\n    }\n}\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n            'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiConstructorParamsNotFoundError'\n        });\n    }\n}\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n    constructor({ data, size }) {\n        super([\n            `Data size of ${size} bytes is invalid.`,\n            'Size must be in increments of 32 bytes (size % 32 === 0).',\n        ].join('\\n'), { metaMessages: [`Data: ${data} (${size} bytes)`] });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiDecodingDataSizeInvalidError'\n        });\n    }\n}\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n    constructor({ data, params, size, }) {\n        super([`Data size of ${size} bytes is too small for given parameters.`].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiDecodingDataSizeTooSmallError'\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class AbiDecodingOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position }) {\n        super(`Offset at \"${offset}\" is out-of-bounds (current position: \"${position}\").`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiDecodingOffsetOutOfBoundsError'\n        });\n    }\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n    constructor() {\n        super('Cannot decode zero data (\"0x\") with ABI parameters.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiDecodingZeroDataError'\n        });\n    }\n}\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, type, }) {\n        super([\n            `ABI encoding array length mismatch for type ${type}.`,\n            `Expected length: ${expectedLength}`,\n            `Given length: ${givenLength}`,\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEncodingArrayLengthMismatchError'\n        });\n    }\n}\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, value }) {\n        super(`Size of bytes \"${value}\" (bytes${size(value)}) does not match expected size (bytes${expectedSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEncodingBytesSizeMismatchError'\n        });\n    }\n}\nexport class AbiEncodingLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, }) {\n        super([\n            'ABI encoding params/values length mismatch.',\n            `Expected length (params): ${expectedLength}`,\n            `Given length (values): ${givenLength}`,\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEncodingLengthMismatchError'\n        });\n    }\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n    constructor(errorName, { docsPath }) {\n        super([\n            `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n            'Cannot encode error result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the inputs exist on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiErrorInputsNotFoundError'\n        });\n    }\n}\nexport class AbiErrorNotFoundError extends BaseError {\n    constructor(errorName, { docsPath } = {}) {\n        super([\n            `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiErrorNotFoundError'\n        });\n    }\n}\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded error signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n            `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiErrorSignatureNotFoundError'\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.signature = signature;\n    }\n}\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n    constructor({ docsPath }) {\n        super('Cannot extract event signature from empty topics.', {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEventSignatureEmptyTopicsError'\n        });\n    }\n}\nexport class AbiEventSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded event signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEventSignatureNotFoundError'\n        });\n    }\n}\nexport class AbiEventNotFoundError extends BaseError {\n    constructor(eventName, { docsPath } = {}) {\n        super([\n            `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiEventNotFoundError'\n        });\n    }\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n    constructor(functionName, { docsPath } = {}) {\n        super([\n            `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiFunctionNotFoundError'\n        });\n    }\n}\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n    constructor(functionName, { docsPath }) {\n        super([\n            `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n            'Cannot decode function result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiFunctionOutputsNotFoundError'\n        });\n    }\n}\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded function signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiFunctionSignatureNotFoundError'\n        });\n    }\n}\nexport class AbiItemAmbiguityError extends BaseError {\n    constructor(x, y) {\n        super('Found ambiguous types in overloaded ABI items.', {\n            metaMessages: [\n                `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n                `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n                '',\n                'These types encode differently and cannot be distinguished at runtime.',\n                'Remove one of the ambiguous items in the ABI.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiItemAmbiguityError'\n        });\n    }\n}\nexport class BytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, givenSize, }) {\n        super(`Expected bytes${expectedSize}, got bytes${givenSize}.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BytesSizeMismatchError'\n        });\n    }\n}\nexport class DecodeLogDataMismatch extends BaseError {\n    constructor({ abiItem, data, params, size, }) {\n        super([\n            `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n        ].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'DecodeLogDataMismatch'\n        });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n    constructor({ abiItem, param, }) {\n        super([\n            `Expected a topic for indexed event parameter${param.name ? ` \"${param.name}\"` : ''} on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'DecodeLogTopicsMismatch'\n        });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n    }\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid encoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiEncodingType'\n        });\n    }\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid decoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiDecodingType'\n        });\n    }\n}\nexport class InvalidArrayError extends BaseError {\n    constructor(value) {\n        super([`Value \"${value}\" is not a valid array.`].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidArrayError'\n        });\n    }\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n    constructor(type) {\n        super([\n            `\"${type}\" is not a valid definition type.`,\n            'Valid types: \"function\", \"event\", \"error\"',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidDefinitionTypeError'\n        });\n    }\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n    constructor(type) {\n        super(`Type \"${type}\" is not supported for packed encoding.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnsupportedPackedAbiType'\n        });\n    }\n}\n//# sourceMappingURL=abi.js.map","import { stringify } from '../stringify.js';\nexport function formatAbiItemWithArgs({ abiItem, args, includeFunctionName = true, includeName = false, }) {\n    if (!('name' in abiItem))\n        return;\n    if (!('inputs' in abiItem))\n        return;\n    if (!abiItem.inputs)\n        return;\n    return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n        .map((input, i) => `${includeName && input.name ? `${input.name}: ` : ''}${typeof args[i] === 'object' ? stringify(args[i]) : args[i]}`)\n        .join(', ')})`;\n}\n//# sourceMappingURL=formatAbiItemWithArgs.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'CallExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ContractFunctionExecutionError'\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ContractFunctionRevertedError'\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ContractFunctionZeroDataError'\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '');\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RawContractError'\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class HttpRequestError extends BaseError {\n    constructor({ body, details, headers, status, url, }) {\n        super('HTTP request failed.', {\n            details,\n            metaMessages: [\n                status && `Status: ${status}`,\n                `URL: ${getUrl(url)}`,\n                body && `Request body: ${stringify(body)}`,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'HttpRequestError'\n        });\n        Object.defineProperty(this, \"body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.url = url;\n    }\n}\nexport class WebSocketRequestError extends BaseError {\n    constructor({ body, details, url, }) {\n        super('WebSocket request failed.', {\n            details,\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebSocketRequestError'\n        });\n    }\n}\nexport class RpcRequestError extends BaseError {\n    constructor({ body, error, url, }) {\n        super('RPC Request failed.', {\n            cause: error,\n            details: error.message,\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RpcRequestError'\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.code = error.code;\n    }\n}\nexport class TimeoutError extends BaseError {\n    constructor({ body, url, }) {\n        super('The request took too long to respond.', {\n            details: 'The request timed out.',\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=request.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AccountStateConflictError'\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'StateAssignmentConflictError'\n        });\n    }\n}\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { BaseError } from './base.js';\nexport class UrlRequiredError extends BaseError {\n    constructor() {\n        super('No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.', {\n            docsPath: '/docs/clients/intro',\n        });\n    }\n}\n//# sourceMappingURL=transport.js.map","export function createIdStore() {\n    return {\n        current: 0,\n        take() {\n            return this.current++;\n        },\n        reset() {\n            this.current = 0;\n        },\n    };\n}\nexport const idCache = /*#__PURE__*/ createIdStore();\n//# sourceMappingURL=id.js.map","import { HttpRequestError, TimeoutError, } from '../../errors/request.js';\nimport { withTimeout, } from '../promise/withTimeout.js';\nimport { stringify } from '../stringify.js';\nimport { idCache } from './id.js';\nexport function getHttpRpcClient(url, options = {}) {\n    return {\n        async request(params) {\n            const { body, onRequest = options.onRequest, onResponse = options.onResponse, timeout = options.timeout ?? 10_000, } = params;\n            const fetchOptions = {\n                ...(options.fetchOptions ?? {}),\n                ...(params.fetchOptions ?? {}),\n            };\n            const { headers, method, signal: signal_ } = fetchOptions;\n            try {\n                const response = await withTimeout(async ({ signal }) => {\n                    const init = {\n                        ...fetchOptions,\n                        body: Array.isArray(body)\n                            ? stringify(body.map((body) => ({\n                                jsonrpc: '2.0',\n                                id: body.id ?? idCache.take(),\n                                ...body,\n                            })))\n                            : stringify({\n                                jsonrpc: '2.0',\n                                id: body.id ?? idCache.take(),\n                                ...body,\n                            }),\n                        headers: {\n                            ...headers,\n                            'Content-Type': 'application/json',\n                        },\n                        method: method || 'POST',\n                        signal: signal_ || (timeout > 0 ? signal : null),\n                    };\n                    const request = new Request(url, init);\n                    if (onRequest)\n                        await onRequest(request);\n                    const response = await fetch(url, init);\n                    return response;\n                }, {\n                    errorInstance: new TimeoutError({ body, url }),\n                    timeout,\n                    signal: true,\n                });\n                if (onResponse)\n                    await onResponse(response);\n                let data;\n                if (response.headers.get('Content-Type')?.startsWith('application/json'))\n                    data = await response.json();\n                else {\n                    data = await response.text();\n                    data = JSON.parse(data || '{}');\n                }\n                if (!response.ok) {\n                    throw new HttpRequestError({\n                        body,\n                        details: stringify(data.error) || response.statusText,\n                        headers: response.headers,\n                        status: response.status,\n                        url,\n                    });\n                }\n                return data;\n            }\n            catch (err) {\n                if (err instanceof HttpRequestError)\n                    throw err;\n                if (err instanceof TimeoutError)\n                    throw err;\n                throw new HttpRequestError({\n                    body,\n                    details: err.message,\n                    url,\n                });\n            }\n        },\n    };\n}\n//# sourceMappingURL=http.js.map","export function withTimeout(fn, { errorInstance = new Error('timed out'), timeout, signal, }) {\n    return new Promise((resolve, reject) => {\n        ;\n        (async () => {\n            let timeoutId;\n            try {\n                const controller = new AbortController();\n                if (timeout > 0) {\n                    timeoutId = setTimeout(() => {\n                        if (signal) {\n                            controller.abort();\n                        }\n                        else {\n                            reject(errorInstance);\n                        }\n                    }, timeout);\n                }\n                resolve(await fn({ signal: controller?.signal || null }));\n            }\n            catch (err) {\n                if (err.name === 'AbortError')\n                    reject(errorInstance);\n                reject(err);\n            }\n            finally {\n                clearTimeout(timeoutId);\n            }\n        })();\n    });\n}\n//# sourceMappingURL=withTimeout.js.map","import { BaseError } from './base.js';\nimport { RpcRequestError } from './request.js';\nconst unknownErrorCode = -1;\nexport class RpcError extends BaseError {\n    constructor(cause, { code, docsPath, metaMessages, shortMessage }) {\n        super(shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: metaMessages || cause?.metaMessages,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RpcError'\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = cause.name;\n        this.code = (cause instanceof RpcRequestError ? cause.code : code ?? unknownErrorCode);\n    }\n}\nexport class ProviderRpcError extends RpcError {\n    constructor(cause, options) {\n        super(cause, options);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ProviderRpcError'\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = options.data;\n    }\n}\nexport class ParseRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ParseRpcError.code,\n            shortMessage: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ParseRpcError'\n        });\n    }\n}\nObject.defineProperty(ParseRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32700\n});\nexport class InvalidRequestRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidRequestRpcError.code,\n            shortMessage: 'JSON is not a valid request object.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidRequestRpcError'\n        });\n    }\n}\nObject.defineProperty(InvalidRequestRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32600\n});\nexport class MethodNotFoundRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: MethodNotFoundRpcError.code,\n            shortMessage: 'The method does not exist / is not available.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'MethodNotFoundRpcError'\n        });\n    }\n}\nObject.defineProperty(MethodNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32601\n});\nexport class InvalidParamsRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidParamsRpcError.code,\n            shortMessage: [\n                'Invalid parameters were provided to the RPC method.',\n                'Double check you have provided the correct parameters.',\n            ].join('\\n'),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidParamsRpcError'\n        });\n    }\n}\nObject.defineProperty(InvalidParamsRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nexport class InternalRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InternalRpcError.code,\n            shortMessage: 'An internal error was received.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InternalRpcError'\n        });\n    }\n}\nObject.defineProperty(InternalRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32603\n});\nexport class InvalidInputRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidInputRpcError.code,\n            shortMessage: [\n                'Missing or invalid parameters.',\n                'Double check you have provided the correct parameters.',\n            ].join('\\n'),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidInputRpcError'\n        });\n    }\n}\nObject.defineProperty(InvalidInputRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32000\n});\nexport class ResourceNotFoundRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ResourceNotFoundRpcError.code,\n            shortMessage: 'Requested resource not found.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ResourceNotFoundRpcError'\n        });\n    }\n}\nObject.defineProperty(ResourceNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32001\n});\nexport class ResourceUnavailableRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ResourceUnavailableRpcError.code,\n            shortMessage: 'Requested resource not available.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ResourceUnavailableRpcError'\n        });\n    }\n}\nObject.defineProperty(ResourceUnavailableRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32002\n});\nexport class TransactionRejectedRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: TransactionRejectedRpcError.code,\n            shortMessage: 'Transaction creation failed.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionRejectedRpcError'\n        });\n    }\n}\nObject.defineProperty(TransactionRejectedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32003\n});\nexport class MethodNotSupportedRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: MethodNotSupportedRpcError.code,\n            shortMessage: 'Method is not implemented.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'MethodNotSupportedRpcError'\n        });\n    }\n}\nObject.defineProperty(MethodNotSupportedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32004\n});\nexport class LimitExceededRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: LimitExceededRpcError.code,\n            shortMessage: 'Request exceeds defined limit.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'LimitExceededRpcError'\n        });\n    }\n}\nObject.defineProperty(LimitExceededRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32005\n});\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: JsonRpcVersionUnsupportedError.code,\n            shortMessage: 'Version of JSON-RPC protocol is not supported.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'JsonRpcVersionUnsupportedError'\n        });\n    }\n}\nObject.defineProperty(JsonRpcVersionUnsupportedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32006\n});\nexport class UserRejectedRequestError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UserRejectedRequestError.code,\n            shortMessage: 'User rejected the request.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UserRejectedRequestError'\n        });\n    }\n}\nObject.defineProperty(UserRejectedRequestError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4001\n});\nexport class UnauthorizedProviderError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnauthorizedProviderError.code,\n            shortMessage: 'The requested method and/or account has not been authorized by the user.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnauthorizedProviderError'\n        });\n    }\n}\nObject.defineProperty(UnauthorizedProviderError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4100\n});\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnsupportedProviderMethodError.code,\n            shortMessage: 'The Provider does not support the requested method.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnsupportedProviderMethodError'\n        });\n    }\n}\nObject.defineProperty(UnsupportedProviderMethodError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4200\n});\nexport class ProviderDisconnectedError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ProviderDisconnectedError.code,\n            shortMessage: 'The Provider is disconnected from all chains.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ProviderDisconnectedError'\n        });\n    }\n}\nObject.defineProperty(ProviderDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4900\n});\nexport class ChainDisconnectedError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ChainDisconnectedError.code,\n            shortMessage: 'The Provider is not connected to the requested chain.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDisconnectedError'\n        });\n    }\n}\nObject.defineProperty(ChainDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4901\n});\nexport class SwitchChainError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: SwitchChainError.code,\n            shortMessage: 'An error occurred when attempting to switch chain.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SwitchChainError'\n        });\n    }\n}\nObject.defineProperty(SwitchChainError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4902\n});\nexport class UnknownRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            shortMessage: 'An unknown RPC error occurred.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownRpcError'\n        });\n    }\n}\n//# sourceMappingURL=rpc.js.map","export async function wait(time) {\n    return new Promise((res) => setTimeout(res, time));\n}\n//# sourceMappingURL=wait.js.map","import { wait } from '../wait.js';\nexport function withRetry(fn, { delay: delay_ = 100, retryCount = 2, shouldRetry = () => true, } = {}) {\n    return new Promise((resolve, reject) => {\n        const attemptRetry = async ({ count = 0 } = {}) => {\n            const retry = async ({ error }) => {\n                const delay = typeof delay_ === 'function' ? delay_({ count, error }) : delay_;\n                if (delay)\n                    await wait(delay);\n                attemptRetry({ count: count + 1 });\n            };\n            try {\n                const data = await fn();\n                resolve(data);\n            }\n            catch (err) {\n                if (count < retryCount &&\n                    (await shouldRetry({ count, error: err })))\n                    return retry({ error: err });\n                reject(err);\n            }\n        };\n        attemptRetry();\n    });\n}\n//# sourceMappingURL=withRetry.js.map","import { BaseError } from '../errors/base.js';\nimport { HttpRequestError, } from '../errors/request.js';\nimport { ChainDisconnectedError, InternalRpcError, InvalidInputRpcError, InvalidParamsRpcError, InvalidRequestRpcError, JsonRpcVersionUnsupportedError, LimitExceededRpcError, MethodNotFoundRpcError, MethodNotSupportedRpcError, ParseRpcError, ProviderDisconnectedError, ResourceNotFoundRpcError, ResourceUnavailableRpcError, SwitchChainError, TransactionRejectedRpcError, UnauthorizedProviderError, UnknownRpcError, UnsupportedProviderMethodError, UserRejectedRequestError, } from '../errors/rpc.js';\nimport { withRetry } from './promise/withRetry.js';\nexport function buildRequest(request, options = {}) {\n    return async (args, overrideOptions = {}) => {\n        const { retryDelay = 150, retryCount = 3 } = {\n            ...options,\n            ...overrideOptions,\n        };\n        return withRetry(async () => {\n            try {\n                return await request(args);\n            }\n            catch (err_) {\n                const err = err_;\n                switch (err.code) {\n                    // -32700\n                    case ParseRpcError.code:\n                        throw new ParseRpcError(err);\n                    // -32600\n                    case InvalidRequestRpcError.code:\n                        throw new InvalidRequestRpcError(err);\n                    // -32601\n                    case MethodNotFoundRpcError.code:\n                        throw new MethodNotFoundRpcError(err);\n                    // -32602\n                    case InvalidParamsRpcError.code:\n                        throw new InvalidParamsRpcError(err);\n                    // -32603\n                    case InternalRpcError.code:\n                        throw new InternalRpcError(err);\n                    // -32000\n                    case InvalidInputRpcError.code:\n                        throw new InvalidInputRpcError(err);\n                    // -32001\n                    case ResourceNotFoundRpcError.code:\n                        throw new ResourceNotFoundRpcError(err);\n                    // -32002\n                    case ResourceUnavailableRpcError.code:\n                        throw new ResourceUnavailableRpcError(err);\n                    // -32003\n                    case TransactionRejectedRpcError.code:\n                        throw new TransactionRejectedRpcError(err);\n                    // -32004\n                    case MethodNotSupportedRpcError.code:\n                        throw new MethodNotSupportedRpcError(err);\n                    // -32005\n                    case LimitExceededRpcError.code:\n                        throw new LimitExceededRpcError(err);\n                    // -32006\n                    case JsonRpcVersionUnsupportedError.code:\n                        throw new JsonRpcVersionUnsupportedError(err);\n                    // 4001\n                    case UserRejectedRequestError.code:\n                        throw new UserRejectedRequestError(err);\n                    // 4100\n                    case UnauthorizedProviderError.code:\n                        throw new UnauthorizedProviderError(err);\n                    // 4200\n                    case UnsupportedProviderMethodError.code:\n                        throw new UnsupportedProviderMethodError(err);\n                    // 4900\n                    case ProviderDisconnectedError.code:\n                        throw new ProviderDisconnectedError(err);\n                    // 4901\n                    case ChainDisconnectedError.code:\n                        throw new ChainDisconnectedError(err);\n                    // 4902\n                    case SwitchChainError.code:\n                        throw new SwitchChainError(err);\n                    // CAIP-25: User Rejected Error\n                    // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n                    case 5000:\n                        throw new UserRejectedRequestError(err);\n                    default:\n                        if (err_ instanceof BaseError)\n                            throw err_;\n                        throw new UnknownRpcError(err);\n                }\n            }\n        }, {\n            delay: ({ count, error }) => {\n                // If we find a Retry-After header, let's retry after the given time.\n                if (error && error instanceof HttpRequestError) {\n                    const retryAfter = error?.headers?.get('Retry-After');\n                    if (retryAfter?.match(/\\d/))\n                        return Number.parseInt(retryAfter) * 1000;\n                }\n                // Otherwise, let's retry with an exponential backoff.\n                return ~~(1 << count) * retryDelay;\n            },\n            retryCount,\n            shouldRetry: ({ error }) => shouldRetry(error),\n        });\n    };\n}\nexport function shouldRetry(error) {\n    if ('code' in error && typeof error.code === 'number') {\n        if (error.code === -1)\n            return true; // Unknown error\n        if (error.code === LimitExceededRpcError.code)\n            return true;\n        if (error.code === InternalRpcError.code)\n            return true;\n        return false;\n    }\n    if (error instanceof HttpRequestError && error.status) {\n        // Forbidden\n        if (error.status === 403)\n            return true;\n        // Request Timeout\n        if (error.status === 408)\n            return true;\n        // Request Entity Too Large\n        if (error.status === 413)\n            return true;\n        // Too Many Requests\n        if (error.status === 429)\n            return true;\n        // Internal Server Error\n        if (error.status === 500)\n            return true;\n        // Bad Gateway\n        if (error.status === 502)\n            return true;\n        // Service Unavailable\n        if (error.status === 503)\n            return true;\n        // Gateway Timeout\n        if (error.status === 504)\n            return true;\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=buildRequest.js.map","import { RpcRequestError } from '../../errors/request.js';\nimport { UrlRequiredError, } from '../../errors/transport.js';\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js';\nimport { getHttpRpcClient, } from '../../utils/rpc/http.js';\nimport { createTransport, } from './createTransport.js';\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n/** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\nurl, config = {}) {\n    const { batch, fetchOptions, key = 'http', name = 'HTTP JSON-RPC', onFetchRequest, onFetchResponse, retryDelay, } = config;\n    return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n        const { batchSize = 1000, wait = 0 } = typeof batch === 'object' ? batch : {};\n        const retryCount = config.retryCount ?? retryCount_;\n        const timeout = timeout_ ?? config.timeout ?? 10_000;\n        const url_ = url || chain?.rpcUrls.default.http[0];\n        if (!url_)\n            throw new UrlRequiredError();\n        const rpcClient = getHttpRpcClient(url_, {\n            fetchOptions,\n            onRequest: onFetchRequest,\n            onResponse: onFetchResponse,\n            timeout,\n        });\n        return createTransport({\n            key,\n            name,\n            async request({ method, params }) {\n                const body = { method, params };\n                const { schedule } = createBatchScheduler({\n                    id: url_,\n                    wait,\n                    shouldSplitBatch(requests) {\n                        return requests.length > batchSize;\n                    },\n                    fn: (body) => rpcClient.request({\n                        body,\n                    }),\n                    sort: (a, b) => a.id - b.id,\n                });\n                const fn = async (body) => batch\n                    ? schedule(body)\n                    : [\n                        await rpcClient.request({\n                            body,\n                        }),\n                    ];\n                const [{ error, result }] = await fn(body);\n                if (error)\n                    throw new RpcRequestError({\n                        body,\n                        error,\n                        url: url_,\n                    });\n                return result;\n            },\n            retryCount,\n            retryDelay,\n            timeout,\n            type: 'http',\n        }, {\n            fetchOptions,\n            url: url_,\n        });\n    };\n}\n//# sourceMappingURL=http.js.map","import { buildRequest } from '../../utils/buildRequest.js';\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport({ key, name, request, retryCount = 3, retryDelay = 150, timeout, type, }, value) {\n    return {\n        config: { key, name, request, retryCount, retryDelay, timeout, type },\n        request: buildRequest(request, { retryCount, retryDelay }),\n        value,\n    };\n}\n//# sourceMappingURL=createTransport.js.map","const size = 256;\nlet index = size;\nlet buffer;\nexport function uid(length = 11) {\n    if (!buffer || index + length > size * 2) {\n        buffer = '';\n        index = 0;\n        for (let i = 0; i < size; i++) {\n            buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1);\n        }\n    }\n    return buffer.substring(index, index++ + length);\n}\n//# sourceMappingURL=uid.js.map","import { panicReasons } from '../../constants/solidity.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionRevertedError } from '../../errors/contract.js';\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(err, callType) {\n    if (!(err instanceof BaseError))\n        return false;\n    const cause = err.walk((e) => e instanceof ContractFunctionRevertedError);\n    if (!(cause instanceof ContractFunctionRevertedError))\n        return false;\n    if (cause.data?.errorName === 'ResolverNotFound')\n        return true;\n    if (cause.data?.errorName === 'ResolverWildcardNotSupported')\n        return true;\n    if (cause.data?.errorName === 'ResolverNotContract')\n        return true;\n    if (cause.data?.errorName === 'ResolverError')\n        return true;\n    if (cause.data?.errorName === 'HttpError')\n        return true;\n    // Backwards compatibility for older UniversalResolver contracts\n    if (cause.reason?.includes('Wildcard on non-extended resolvers is not supported'))\n        return true;\n    // No primary name set for address.\n    if (callType === 'reverse' && cause.reason === panicReasons[50])\n        return true;\n    return false;\n}\n//# sourceMappingURL=errors.js.map","import { isHex } from '../data/isHex.js';\nexport function encodedLabelToLabelhash(label) {\n    if (label.length !== 66)\n        return null;\n    if (label.indexOf('[') !== 0)\n        return null;\n    if (label.indexOf(']') !== 65)\n        return null;\n    const hash = `0x${label.slice(1, 65)}`;\n    if (!isHex(hash))\n        return null;\n    return hash;\n}\n//# sourceMappingURL=encodedLabelToLabelhash.js.map","import { concat } from '../data/concat.js';\nimport { stringToBytes, toBytes, } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { encodedLabelToLabelhash, } from './encodedLabelToLabelhash.js';\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name) {\n    let result = new Uint8Array(32).fill(0);\n    if (!name)\n        return bytesToHex(result);\n    const labels = name.split('.');\n    // Iterate in reverse order building up hash\n    for (let i = labels.length - 1; i >= 0; i -= 1) {\n        const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i]);\n        const hashed = hashFromEncodedLabel\n            ? toBytes(hashFromEncodedLabel)\n            : keccak256(stringToBytes(labels[i]), 'bytes');\n        result = keccak256(concat([result, hashed]), 'bytes');\n    }\n    return bytesToHex(result);\n}\n//# sourceMappingURL=namehash.js.map","import { stringToBytes, } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { encodedLabelToLabelhash, } from './encodedLabelToLabelhash.js';\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label) {\n    const result = new Uint8Array(32).fill(0);\n    if (!label)\n        return bytesToHex(result);\n    return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label));\n}\n//# sourceMappingURL=labelhash.js.map","import { stringToBytes, } from '../encoding/toBytes.js';\nimport { encodeLabelhash, } from './encodeLabelhash.js';\nimport { labelhash } from './labelhash.js';\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n *\n * @example\n * packetToBytes('awkweb.eth')\n * '0x0661776b7765620365746800'\n *\n * @see https://docs.ens.domains/resolution/names#dns\n *\n */\nexport function packetToBytes(packet) {\n    // strip leading and trailing `.`\n    const value = packet.replace(/^\\.|\\.$/gm, '');\n    if (value.length === 0)\n        return new Uint8Array(1);\n    const bytes = new Uint8Array(stringToBytes(value).byteLength + 2);\n    let offset = 0;\n    const list = value.split('.');\n    for (let i = 0; i < list.length; i++) {\n        let encoded = stringToBytes(list[i]);\n        // if the length is > 255, make the encoded label value a labelhash\n        // this is compatible with the universal resolver\n        if (encoded.byteLength > 255)\n            encoded = stringToBytes(encodeLabelhash(labelhash(list[i])));\n        bytes[offset] = encoded.length;\n        bytes.set(encoded, offset + 1);\n        offset += encoded.length + 1;\n    }\n    if (bytes.byteLength !== offset + 1)\n        return bytes.slice(0, offset + 1);\n    return bytes;\n}\n//# sourceMappingURL=packetToBytes.js.map","export function encodeLabelhash(hash) {\n    return `[${hash.slice(2)}]`;\n}\n//# sourceMappingURL=encodeLabelhash.js.map","/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction(client, action, \n// Some minifiers drop `Function.prototype.name` or can change function\n// names so that getting the name by reflection through `action.name` will\n// not work.\nname) {\n    return (params) => client[action.name]?.(params) ??\n        client[name]?.(params) ??\n        action(client, params);\n}\n//# sourceMappingURL=getAction.js.map","import { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, RawContractError, } from '../../errors/contract.js';\nimport { InternalRpcError } from '../../errors/rpc.js';\nconst EXECUTION_REVERTED_ERROR_CODE = 3;\nexport function getContractError(err, { abi, address, args, docsPath, functionName, sender, }) {\n    const { code, data, message, shortMessage } = (err instanceof RawContractError\n        ? err\n        : err instanceof BaseError\n            ? err.walk((err) => 'data' in err) || err.walk()\n            : {});\n    const cause = (() => {\n        if (err instanceof AbiDecodingZeroDataError)\n            return new ContractFunctionZeroDataError({ functionName });\n        if ([EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n            (data || message || shortMessage)) {\n            return new ContractFunctionRevertedError({\n                abi,\n                data: typeof data === 'object' ? data.data : data,\n                functionName,\n                message: shortMessage ?? message,\n            });\n        }\n        return err;\n    })();\n    return new ContractFunctionExecutionError(cause, {\n        abi,\n        args,\n        contractAddress: address,\n        docsPath,\n        functionName,\n        sender,\n    });\n}\n//# sourceMappingURL=getContractError.js.map","import { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { call } from './call.js';\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract(client, parameters) {\n    const { abi, address, args, functionName, ...rest } = parameters;\n    const calldata = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n    });\n    try {\n        const { data } = await getAction(client, call, 'call')({\n            ...rest,\n            data: calldata,\n            to: address,\n        });\n        return decodeFunctionResult({\n            abi,\n            args,\n            functionName,\n            data: data || '0x',\n        });\n    }\n    catch (error) {\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/readContract',\n            functionName,\n        });\n    }\n}\n//# sourceMappingURL=readContract.js.map","import { BaseError } from './base.js';\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n    constructor({ data }) {\n        super('Unable to extract image from metadata. The metadata may be malformed or invalid.', {\n            metaMessages: [\n                '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n                '',\n                `Provided data: ${JSON.stringify(data)}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EnsAvatarInvalidMetadataError'\n        });\n    }\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n    constructor({ reason }) {\n        super(`ENS NFT avatar URI is invalid. ${reason}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EnsAvatarInvalidNftUriError'\n        });\n    }\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n    constructor({ uri }) {\n        super(`Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EnsAvatarUriResolutionError'\n        });\n    }\n}\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n    constructor({ namespace }) {\n        super(`ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EnsAvatarUnsupportedNamespaceError'\n        });\n    }\n}\n//# sourceMappingURL=ens.js.map","import { readContract, } from '../../../actions/public/readContract.js';\nimport { EnsAvatarInvalidMetadataError, EnsAvatarInvalidNftUriError, EnsAvatarUnsupportedNamespaceError, EnsAvatarUriResolutionError, } from '../../../errors/ens.js';\nconst networkRegex = /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/;\nconst ipfsHashRegex = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/;\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/;\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;\nexport async function isImageUri(uri) {\n    try {\n        const res = await fetch(uri, { method: 'HEAD' });\n        // retrieve content type header to check if content is image\n        if (res.status === 200) {\n            const contentType = res.headers.get('content-type');\n            return contentType?.startsWith('image/');\n        }\n        return false;\n    }\n    catch (error) {\n        // if error is not cors related then fail\n        if (typeof error === 'object' && typeof error.response !== 'undefined') {\n            return false;\n        }\n        // fail in NodeJS, since the error is not cors but any other network issue\n        // biome-ignore lint/suspicious/noPrototypeBuiltins:\n        if (!globalThis.hasOwnProperty('Image'))\n            return false;\n        // in case of cors, use image api to validate if given url is an actual image\n        return new Promise((resolve) => {\n            const img = new Image();\n            img.onload = () => {\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            img.src = uri;\n        });\n    }\n}\nexport function getGateway(custom, defaultGateway) {\n    if (!custom)\n        return defaultGateway;\n    if (custom.endsWith('/'))\n        return custom.slice(0, -1);\n    return custom;\n}\nexport function resolveAvatarUri({ uri, gatewayUrls, }) {\n    const isEncoded = base64Regex.test(uri);\n    if (isEncoded)\n        return { uri, isOnChain: true, isEncoded };\n    const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io');\n    const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net');\n    const networkRegexMatch = uri.match(networkRegex);\n    const { protocol, subpath, target, subtarget = '', } = networkRegexMatch?.groups || {};\n    const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/';\n    const isIPFS = protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri);\n    if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n        let replacedUri = uri;\n        if (gatewayUrls?.arweave)\n            replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave);\n        return { uri: replacedUri, isOnChain: false, isEncoded: false };\n    }\n    if ((isIPNS || isIPFS) && target) {\n        return {\n            uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n            isOnChain: false,\n            isEncoded: false,\n        };\n    }\n    if (protocol === 'ar:/' && target) {\n        return {\n            uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n            isOnChain: false,\n            isEncoded: false,\n        };\n    }\n    let parsedUri = uri.replace(dataURIRegex, '');\n    if (parsedUri.startsWith('<svg')) {\n        // if svg, base64 encode\n        parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`;\n    }\n    if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n        return {\n            uri: parsedUri,\n            isOnChain: true,\n            isEncoded: false,\n        };\n    }\n    throw new EnsAvatarUriResolutionError({ uri });\n}\nexport function getJsonImage(data) {\n    // validation check for json data, must include one of theses properties\n    if (typeof data !== 'object' ||\n        (!('image' in data) && !('image_url' in data) && !('image_data' in data))) {\n        throw new EnsAvatarInvalidMetadataError({ data });\n    }\n    return data.image || data.image_url || data.image_data;\n}\nexport async function getMetadataAvatarUri({ gatewayUrls, uri, }) {\n    try {\n        const res = await fetch(uri).then((res) => res.json());\n        const image = await parseAvatarUri({\n            gatewayUrls,\n            uri: getJsonImage(res),\n        });\n        return image;\n    }\n    catch {\n        throw new EnsAvatarUriResolutionError({ uri });\n    }\n}\nexport async function parseAvatarUri({ gatewayUrls, uri, }) {\n    const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls });\n    if (isOnChain)\n        return resolvedURI;\n    // check if resolvedURI is an image, if it is return the url\n    const isImage = await isImageUri(resolvedURI);\n    if (isImage)\n        return resolvedURI;\n    throw new EnsAvatarUriResolutionError({ uri });\n}\nexport function parseNftUri(uri_) {\n    let uri = uri_;\n    // parse valid nft spec (CAIP-22/CAIP-29)\n    // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n    if (uri.startsWith('did:nft:')) {\n        // convert DID to CAIP\n        uri = uri.replace('did:nft:', '').replace(/_/g, '/');\n    }\n    const [reference, asset_namespace, tokenID] = uri.split('/');\n    const [eip_namespace, chainID] = reference.split(':');\n    const [erc_namespace, contractAddress] = asset_namespace.split(':');\n    if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' });\n    if (!chainID)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' });\n    if (!contractAddress)\n        throw new EnsAvatarInvalidNftUriError({\n            reason: 'Contract address not found',\n        });\n    if (!tokenID)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' });\n    if (!erc_namespace)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' });\n    return {\n        chainID: Number.parseInt(chainID),\n        namespace: erc_namespace.toLowerCase(),\n        contractAddress: contractAddress,\n        tokenID,\n    };\n}\nexport async function getNftTokenUri(client, { nft }) {\n    if (nft.namespace === 'erc721') {\n        return readContract(client, {\n            address: nft.contractAddress,\n            abi: [\n                {\n                    name: 'tokenURI',\n                    type: 'function',\n                    stateMutability: 'view',\n                    inputs: [{ name: 'tokenId', type: 'uint256' }],\n                    outputs: [{ name: '', type: 'string' }],\n                },\n            ],\n            functionName: 'tokenURI',\n            args: [BigInt(nft.tokenID)],\n        });\n    }\n    if (nft.namespace === 'erc1155') {\n        return readContract(client, {\n            address: nft.contractAddress,\n            abi: [\n                {\n                    name: 'uri',\n                    type: 'function',\n                    stateMutability: 'view',\n                    inputs: [{ name: '_id', type: 'uint256' }],\n                    outputs: [{ name: '', type: 'string' }],\n                },\n            ],\n            functionName: 'uri',\n            args: [BigInt(nft.tokenID)],\n        });\n    }\n    throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace });\n}\n//# sourceMappingURL=utils.js.map","import { getJsonImage, getMetadataAvatarUri, getNftTokenUri, parseAvatarUri, parseNftUri, resolveAvatarUri, } from './utils.js';\n/*\n * @description Parses an ENS avatar record.\n *\n * @example\n * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')\n * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'\n *\n * @see https://docs.ens.domains/web/avatars\n *\n */\nexport async function parseAvatarRecord(client, { gatewayUrls, record, }) {\n    if (/eip155:/i.test(record))\n        return parseNftAvatarUri(client, { gatewayUrls, record });\n    return parseAvatarUri({ uri: record, gatewayUrls });\n}\nasync function parseNftAvatarUri(client, { gatewayUrls, record, }) {\n    // parse NFT URI into properties\n    const nft = parseNftUri(record);\n    // fetch tokenURI from the NFT contract\n    const nftUri = await getNftTokenUri(client, { nft });\n    // resolve the URI from the fetched tokenURI\n    const { uri: resolvedNftUri, isOnChain, isEncoded, } = resolveAvatarUri({ uri: nftUri, gatewayUrls });\n    // if the resolved URI is on chain, return the data\n    if (isOnChain &&\n        (resolvedNftUri.includes('data:application/json;base64,') ||\n            resolvedNftUri.startsWith('{'))) {\n        const encodedJson = isEncoded\n            ? // if it is encoded, decode it\n                atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n            : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n                resolvedNftUri;\n        const decoded = JSON.parse(encodedJson);\n        return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls });\n    }\n    let uriTokenId = nft.tokenID;\n    if (nft.namespace === 'erc1155')\n        uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0');\n    return getMetadataAvatarUri({\n        gatewayUrls,\n        uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n    });\n}\n//# sourceMappingURL=parseAvatarRecord.js.map","import { textResolverAbi, universalResolverResolveAbi, } from '../../constants/abis.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { namehash } from '../../utils/ens/namehash.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wagmi_sh'\n */\nexport async function getEnsText(client, { blockNumber, blockTag, name, key, gatewayUrls, strict, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    try {\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverResolveAbi,\n            functionName: 'resolve',\n            args: [\n                toHex(packetToBytes(name)),\n                encodeFunctionData({\n                    abi: textResolverAbi,\n                    functionName: 'text',\n                    args: [namehash(name), key],\n                }),\n            ],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const res = gatewayUrls\n            ? await readContractAction({\n                ...readContractParameters,\n                args: [...readContractParameters.args, gatewayUrls],\n            })\n            : await readContractAction(readContractParameters);\n        if (res[0] === '0x')\n            return null;\n        const record = decodeFunctionResult({\n            abi: textResolverAbi,\n            functionName: 'text',\n            data: res[0],\n        });\n        return record === '' ? null : record;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'resolve'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsText.js.map","/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope(client, { method }) {\n    const requestMap = {};\n    if (client.transport.type === 'fallback')\n        client.transport.onResponse?.(({ method: method_, response: id, status, transport, }) => {\n            if (status === 'success' && method === method_)\n                requestMap[id] = transport.request;\n        });\n    return ((id) => requestMap[id] || client.request);\n}\n//# sourceMappingURL=createFilterRequestScope.js.map","import { BaseError } from './base.js';\nexport class FilterTypeNotSupportedError extends BaseError {\n    constructor(type) {\n        super(`Filter type \"${type}\" is not supported.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FilterTypeNotSupportedError'\n        });\n    }\n}\n//# sourceMappingURL=log.js.map","import { AbiEventNotFoundError, } from '../../errors/abi.js';\nimport { FilterTypeNotSupportedError, } from '../../errors/log.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { toEventSelector, } from '../hash/toEventSelector.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeEventTopics';\nexport function encodeEventTopics(parameters) {\n    const { abi, eventName, args } = parameters;\n    let abiItem = abi[0];\n    if (eventName) {\n        const item = getAbiItem({ abi, name: eventName });\n        if (!item)\n            throw new AbiEventNotFoundError(eventName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'event')\n        throw new AbiEventNotFoundError(undefined, { docsPath });\n    const definition = formatAbiItem(abiItem);\n    const signature = toEventSelector(definition);\n    let topics = [];\n    if (args && 'inputs' in abiItem) {\n        const indexedInputs = abiItem.inputs?.filter((param) => 'indexed' in param && param.indexed);\n        const args_ = Array.isArray(args)\n            ? args\n            : Object.values(args).length > 0\n                ? indexedInputs?.map((x) => args[x.name]) ?? []\n                : [];\n        if (args_.length > 0) {\n            topics =\n                indexedInputs?.map((param, i) => Array.isArray(args_[i])\n                    ? args_[i].map((_, j) => encodeArg({ param, value: args_[i][j] }))\n                    : args_[i]\n                        ? encodeArg({ param, value: args_[i] })\n                        : null) ?? [];\n        }\n    }\n    return [signature, ...topics];\n}\nfunction encodeArg({ param, value, }) {\n    if (param.type === 'string' || param.type === 'bytes')\n        return keccak256(toBytes(value));\n    if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n        throw new FilterTypeNotSupportedError(param.type);\n    return encodeAbiParameters([param], [value]);\n}\n//# sourceMappingURL=encodeEventTopics.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter(client, parameters) {\n    const { address, abi, args, eventName, fromBlock, strict, toBlock } = parameters;\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newFilter',\n    });\n    const topics = eventName\n        ? encodeEventTopics({\n            abi,\n            args,\n            eventName,\n        })\n        : undefined;\n    const id = await client.request({\n        method: 'eth_newFilter',\n        params: [\n            {\n                address,\n                fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                topics,\n            },\n        ],\n    });\n    return {\n        abi,\n        args,\n        eventName,\n        id,\n        request: getRequest(id),\n        strict: Boolean(strict),\n        type: 'event',\n    };\n}\n//# sourceMappingURL=createContractEventFilter.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter(client, { address, args, event, events: events_, fromBlock, strict, toBlock, } = {}) {\n    const events = events_ ?? (event ? [event] : undefined);\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newFilter',\n    });\n    let topics = [];\n    if (events) {\n        topics = [\n            events.flatMap((event) => encodeEventTopics({\n                abi: [event],\n                eventName: event.name,\n                args,\n            })),\n        ];\n        if (event)\n            topics = topics[0];\n    }\n    const id = await client.request({\n        method: 'eth_newFilter',\n        params: [\n            {\n                address,\n                fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                ...(topics.length ? { topics } : {}),\n            },\n        ],\n    });\n    return {\n        abi: events,\n        args,\n        eventName: event ? event.name : undefined,\n        fromBlock,\n        id,\n        request: getRequest(id),\n        strict: Boolean(strict),\n        toBlock,\n        type: 'event',\n    };\n}\n//# sourceMappingURL=createEventFilter.js.map","import { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter(client) {\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newPendingTransactionFilter',\n    });\n    const id = await client.request({\n        method: 'eth_newPendingTransactionFilter',\n    });\n    return { id, request: getRequest(id), type: 'transaction' };\n}\n//# sourceMappingURL=createPendingTransactionFilter.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nimport { prettyPrint } from './transaction.js';\nexport class EstimateGasExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Estimate Gas Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EstimateGasExecutionError'\n        });\n        this.cause = cause;\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class BaseFeeScalarError extends BaseError {\n    constructor() {\n        super('`baseFeeMultiplier` must be greater than 1.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseFeeScalarError'\n        });\n    }\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n    constructor() {\n        super('Chain does not support EIP-1559 fees.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Eip1559FeesNotSupportedError'\n        });\n    }\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n    constructor({ maxPriorityFeePerGas }) {\n        super(`\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(maxPriorityFeePerGas)} gwei).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'MaxFeePerGasTooLowError'\n        });\n    }\n}\n//# sourceMappingURL=fee.js.map","import { BaseError } from './base.js';\nexport class BlockNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, }) {\n        let identifier = 'Block';\n        if (blockHash)\n            identifier = `Block at hash \"${blockHash}\"`;\n        if (blockNumber)\n            identifier = `Block at number \"${blockNumber}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlockNotFoundError'\n        });\n    }\n}\n//# sourceMappingURL=block.js.map","import { BlockNotFoundError, } from '../../errors/block.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatBlock, } from '../../utils/formatters/block.js';\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock(client, { blockHash, blockNumber, blockTag: blockTag_, includeTransactions: includeTransactions_, } = {}) {\n    const blockTag = blockTag_ ?? 'latest';\n    const includeTransactions = includeTransactions_ ?? false;\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let block = null;\n    if (blockHash) {\n        block = await client.request({\n            method: 'eth_getBlockByHash',\n            params: [blockHash, includeTransactions],\n        });\n    }\n    else {\n        block = await client.request({\n            method: 'eth_getBlockByNumber',\n            params: [blockNumberHex || blockTag, includeTransactions],\n        });\n    }\n    if (!block)\n        throw new BlockNotFoundError({ blockHash, blockNumber });\n    const format = client.chain?.formatters?.block?.format || formatBlock;\n    return format(block);\n}\n//# sourceMappingURL=getBlock.js.map","/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice(client) {\n    const gasPrice = await client.request({\n        method: 'eth_gasPrice',\n    });\n    return BigInt(gasPrice);\n}\n//# sourceMappingURL=getGasPrice.js.map","import { Eip1559FeesNotSupportedError, } from '../../errors/fee.js';\nimport { hexToBigInt, } from '../../utils/encoding/fromHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getBlock } from './getBlock.js';\nimport { getGasPrice } from './getGasPrice.js';\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas(client, args) {\n    return internal_estimateMaxPriorityFeePerGas(client, args);\n}\nexport async function internal_estimateMaxPriorityFeePerGas(client, args) {\n    const { block: block_, chain = client.chain, request } = args || {};\n    if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n        const block = block_ || (await getAction(client, getBlock, 'getBlock')({}));\n        return chain.fees.defaultPriorityFee({\n            block,\n            client,\n            request,\n        });\n    }\n    if (typeof chain?.fees?.defaultPriorityFee !== 'undefined')\n        return chain?.fees?.defaultPriorityFee;\n    try {\n        const maxPriorityFeePerGasHex = await client.request({\n            method: 'eth_maxPriorityFeePerGas',\n        });\n        return hexToBigInt(maxPriorityFeePerGasHex);\n    }\n    catch {\n        // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n        // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n        // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n        const [block, gasPrice] = await Promise.all([\n            block_\n                ? Promise.resolve(block_)\n                : getAction(client, getBlock, 'getBlock')({}),\n            getAction(client, getGasPrice, 'getGasPrice')({}),\n        ]);\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;\n        if (maxPriorityFeePerGas < 0n)\n            return 0n;\n        return maxPriorityFeePerGas;\n    }\n}\n//# sourceMappingURL=estimateMaxPriorityFeePerGas.js.map","import { BaseFeeScalarError, Eip1559FeesNotSupportedError, } from '../../errors/fee.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { internal_estimateMaxPriorityFeePerGas, } from './estimateMaxPriorityFeePerGas.js';\nimport { getBlock } from './getBlock.js';\nimport { getGasPrice } from './getGasPrice.js';\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas(client, args) {\n    return internal_estimateFeesPerGas(client, args);\n}\nexport async function internal_estimateFeesPerGas(client, args) {\n    const { block: block_, chain = client.chain, request, type = 'eip1559', } = args || {};\n    const baseFeeMultiplier = await (async () => {\n        if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n            return chain.fees.baseFeeMultiplier({\n                block: block_,\n                client,\n                request,\n            });\n        return chain?.fees?.baseFeeMultiplier ?? 1.2;\n    })();\n    if (baseFeeMultiplier < 1)\n        throw new BaseFeeScalarError();\n    const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0;\n    const denominator = 10 ** decimals;\n    const multiply = (base) => (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n        BigInt(denominator);\n    const block = block_\n        ? block_\n        : await getAction(client, getBlock, 'getBlock')({});\n    if (typeof chain?.fees?.estimateFeesPerGas === 'function') {\n        const fees = (await chain.fees.estimateFeesPerGas({\n            block: block_,\n            client,\n            multiply,\n            request,\n            type,\n        }));\n        if (fees !== null)\n            return fees;\n    }\n    if (type === 'eip1559') {\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = typeof request?.maxPriorityFeePerGas === 'bigint'\n            ? request.maxPriorityFeePerGas\n            : await internal_estimateMaxPriorityFeePerGas(client, {\n                block: block,\n                chain,\n                request,\n            });\n        const baseFeePerGas = multiply(block.baseFeePerGas);\n        const maxFeePerGas = request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas;\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    const gasPrice = request?.gasPrice ??\n        multiply(await getAction(client, getGasPrice, 'getGasPrice')({}));\n    return {\n        gasPrice,\n    };\n}\n//# sourceMappingURL=estimateFeesPerGas.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has broadcast / sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount(client, { address, blockTag = 'latest', blockNumber }) {\n    const count = await client.request({\n        method: 'eth_getTransactionCount',\n        params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\n    });\n    return hexToNumber(count);\n}\n//# sourceMappingURL=getTransactionCount.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId(client) {\n    const chainIdHex = await client.request({\n        method: 'eth_chainId',\n    });\n    return hexToNumber(chainIdHex);\n}\n//# sourceMappingURL=getChainId.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { internal_estimateFeesPerGas, } from '../../actions/public/estimateFeesPerGas.js';\nimport { estimateGas, } from '../../actions/public/estimateGas.js';\nimport { getBlock as getBlock_, } from '../../actions/public/getBlock.js';\nimport { getTransactionCount, } from '../../actions/public/getTransactionCount.js';\nimport { Eip1559FeesNotSupportedError, MaxFeePerGasTooLowError, } from '../../errors/fee.js';\nimport { blobsToCommitments } from '../../utils/blob/blobsToCommitments.js';\nimport { blobsToProofs } from '../../utils/blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes } from '../../utils/blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars } from '../../utils/blob/toBlobSidecars.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { getTransactionType, } from '../../utils/transaction/getTransactionType.js';\nimport { getChainId } from '../public/getChainId.js';\nexport const defaultParameters = [\n    'blobVersionedHashes',\n    'chainId',\n    'fees',\n    'gas',\n    'nonce',\n    'type',\n];\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest(client, args) {\n    const { account: account_ = client.account, blobs, chain, chainId, gas, kzg, nonce, parameters = defaultParameters, type, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    const request = { ...args, ...(account ? { from: account?.address } : {}) };\n    let block;\n    async function getBlock() {\n        if (block)\n            return block;\n        block = await getAction(client, getBlock_, 'getBlock')({ blockTag: 'latest' });\n        return block;\n    }\n    if ((parameters.includes('blobVersionedHashes') ||\n        parameters.includes('sidecars')) &&\n        blobs &&\n        kzg) {\n        const commitments = blobsToCommitments({ blobs, kzg });\n        if (parameters.includes('blobVersionedHashes')) {\n            const versionedHashes = commitmentsToVersionedHashes({\n                commitments,\n                to: 'hex',\n            });\n            request.blobVersionedHashes = versionedHashes;\n        }\n        if (parameters.includes('sidecars')) {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            const sidecars = toBlobSidecars({\n                blobs,\n                commitments,\n                proofs,\n                to: 'hex',\n            });\n            request.sidecars = sidecars;\n        }\n    }\n    if (parameters.includes('chainId')) {\n        if (chain)\n            request.chainId = chain.id;\n        else if (typeof chainId !== 'undefined')\n            request.chainId = chainId;\n        else\n            request.chainId = await getAction(client, getChainId, 'getChainId')({});\n    }\n    if (parameters.includes('nonce') && typeof nonce === 'undefined' && account)\n        request.nonce = await getAction(client, getTransactionCount, 'getTransactionCount')({\n            address: account.address,\n            blockTag: 'pending',\n        });\n    if ((parameters.includes('fees') || parameters.includes('type')) &&\n        typeof type === 'undefined') {\n        try {\n            request.type = getTransactionType(request);\n        }\n        catch {\n            // infer type from block\n            const block = await getBlock();\n            request.type =\n                typeof block?.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy';\n        }\n    }\n    if (parameters.includes('fees')) {\n        // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.\n        if (request.type !== 'legacy' && request.type !== 'eip2930') {\n            // EIP-1559 fees\n            if (typeof request.maxFeePerGas === 'undefined' ||\n                typeof request.maxPriorityFeePerGas === 'undefined') {\n                const block = await getBlock();\n                const { maxFeePerGas, maxPriorityFeePerGas } = await internal_estimateFeesPerGas(client, {\n                    block: block,\n                    chain,\n                    request: request,\n                });\n                if (typeof args.maxPriorityFeePerGas === 'undefined' &&\n                    args.maxFeePerGas &&\n                    args.maxFeePerGas < maxPriorityFeePerGas)\n                    throw new MaxFeePerGasTooLowError({\n                        maxPriorityFeePerGas,\n                    });\n                request.maxPriorityFeePerGas = maxPriorityFeePerGas;\n                request.maxFeePerGas = maxFeePerGas;\n            }\n        }\n        else {\n            // Legacy fees\n            if (typeof args.maxFeePerGas !== 'undefined' ||\n                typeof args.maxPriorityFeePerGas !== 'undefined')\n                throw new Eip1559FeesNotSupportedError();\n            const block = await getBlock();\n            const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(client, {\n                block: block,\n                chain,\n                request: request,\n                type: 'legacy',\n            });\n            request.gasPrice = gasPrice_;\n        }\n    }\n    if (parameters.includes('gas') && typeof gas === 'undefined')\n        request.gas = await getAction(client, estimateGas, 'estimateGas')({\n            ...request,\n            account: account\n                ? { address: account.address, type: 'json-rpc' }\n                : undefined,\n        });\n    assertRequest(request);\n    delete request.parameters;\n    return request;\n}\n//# sourceMappingURL=prepareTransactionRequest.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getEstimateGasError, } from '../../utils/errors/getEstimateGasError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { serializeStateOverride } from '../../utils/stateOverride.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { prepareTransactionRequest, } from '../wallet/prepareTransactionRequest.js';\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas(client, args) {\n    const account_ = args.account ?? client.account;\n    const account = account_ ? parseAccount(account_) : undefined;\n    try {\n        const { accessList, blobs, blobVersionedHashes, blockNumber, blockTag, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, ...rest } = (await prepareTransactionRequest(client, {\n            ...args,\n            parameters: \n            // Some RPC Providers do not compute versioned hashes from blobs. We will need\n            // to compute them.\n            account?.type === 'local' ? undefined : ['blobVersionedHashes'],\n        }));\n        const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const rpcStateOverride = serializeStateOverride(stateOverride);\n        assertRequest(args);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            blobs,\n            blobVersionedHashes,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerBlobGas,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        const balance = await client.request({\n            method: 'eth_estimateGas',\n            params: rpcStateOverride\n                ? [request, block ?? 'latest', rpcStateOverride]\n                : block\n                    ? [request, block]\n                    : [request],\n        });\n        return BigInt(balance);\n    }\n    catch (err) {\n        throw getEstimateGasError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { EstimateGasExecutionError, } from '../../errors/estimateGas.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getEstimateGasError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new EstimateGasExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getEstimateGasError.js.map","export const promiseCache = /*#__PURE__*/ new Map();\nexport const responseCache = /*#__PURE__*/ new Map();\nexport function getCache(cacheKey) {\n    const buildCache = (cacheKey, cache) => ({\n        clear: () => cache.delete(cacheKey),\n        get: () => cache.get(cacheKey),\n        set: (data) => cache.set(cacheKey, data),\n    });\n    const promise = buildCache(cacheKey, promiseCache);\n    const response = buildCache(cacheKey, responseCache);\n    return {\n        clear: () => {\n            promise.clear();\n            response.clear();\n        },\n        promise,\n        response,\n    };\n}\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache(fn, { cacheKey, cacheTime = Number.POSITIVE_INFINITY }) {\n    const cache = getCache(cacheKey);\n    // If a response exists in the cache, and it's not expired, return it\n    // and do not invoke the promise.\n    // If the max age is 0, the cache is disabled.\n    const response = cache.response.get();\n    if (response && cacheTime > 0) {\n        const age = new Date().getTime() - response.created.getTime();\n        if (age < cacheTime)\n            return response.data;\n    }\n    let promise = cache.promise.get();\n    if (!promise) {\n        promise = fn();\n        // Store the promise in the cache so that subsequent invocations\n        // will wait for the same promise to resolve (deduping).\n        cache.promise.set(promise);\n    }\n    try {\n        const data = await promise;\n        // Store the response in the cache so that subsequent invocations\n        // will return the same response.\n        cache.response.set({ created: new Date(), data });\n        return data;\n    }\n    finally {\n        // Clear the promise cache so that subsequent invocations will\n        // invoke the promise again.\n        cache.promise.clear();\n    }\n}\n//# sourceMappingURL=withCache.js.map","import { getCache, withCache } from '../../utils/promise/withCache.js';\nconst cacheKey = (id) => `blockNumber.${id}`;\nexport function getBlockNumberCache(id) {\n    return getCache(cacheKey(id));\n}\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber(client, { cacheTime = client.cacheTime } = {}) {\n    const blockNumberHex = await withCache(() => client.request({\n        method: 'eth_blockNumber',\n    }), { cacheKey: cacheKey(client.uid), cacheTime });\n    return BigInt(blockNumberHex);\n}\n//# sourceMappingURL=getBlockNumber.js.map","import { AbiDecodingDataSizeTooSmallError, AbiEventSignatureEmptyTopicsError, AbiEventSignatureNotFoundError, DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { size } from '../data/size.js';\nimport { toEventSelector, } from '../hash/toEventSelector.js';\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nconst docsPath = '/docs/contract/decodeEventLog';\nexport function decodeEventLog(parameters) {\n    const { abi, data, strict: strict_, topics, } = parameters;\n    const strict = strict_ ?? true;\n    const [signature, ...argTopics] = topics;\n    if (!signature)\n        throw new AbiEventSignatureEmptyTopicsError({ docsPath });\n    const abiItem = abi.find((x) => x.type === 'event' &&\n        signature === toEventSelector(formatAbiItem(x)));\n    if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n        throw new AbiEventSignatureNotFoundError(signature, { docsPath });\n    const { name, inputs } = abiItem;\n    const isUnnamed = inputs?.some((x) => !('name' in x && x.name));\n    let args = isUnnamed ? [] : {};\n    // Decode topics (indexed args).\n    const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed);\n    for (let i = 0; i < indexedInputs.length; i++) {\n        const param = indexedInputs[i];\n        const topic = argTopics[i];\n        if (!topic)\n            throw new DecodeLogTopicsMismatch({\n                abiItem,\n                param: param,\n            });\n        args[isUnnamed ? i : param.name || i] = decodeTopic({ param, value: topic });\n    }\n    // Decode data (non-indexed args).\n    const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed));\n    if (nonIndexedInputs.length > 0) {\n        if (data && data !== '0x') {\n            try {\n                const decodedData = decodeAbiParameters(nonIndexedInputs, data);\n                if (decodedData) {\n                    if (isUnnamed)\n                        args = [...args, ...decodedData];\n                    else {\n                        for (let i = 0; i < nonIndexedInputs.length; i++) {\n                            args[nonIndexedInputs[i].name] = decodedData[i];\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                if (strict) {\n                    if (err instanceof AbiDecodingDataSizeTooSmallError ||\n                        err instanceof PositionOutOfBoundsError)\n                        throw new DecodeLogDataMismatch({\n                            abiItem,\n                            data: data,\n                            params: nonIndexedInputs,\n                            size: size(data),\n                        });\n                    throw err;\n                }\n            }\n        }\n        else if (strict) {\n            throw new DecodeLogDataMismatch({\n                abiItem,\n                data: '0x',\n                params: nonIndexedInputs,\n                size: 0,\n            });\n        }\n    }\n    return {\n        eventName: name,\n        args: Object.values(args).length > 0 ? args : undefined,\n    };\n}\nfunction decodeTopic({ param, value }) {\n    if (param.type === 'string' ||\n        param.type === 'bytes' ||\n        param.type === 'tuple' ||\n        param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n        return value;\n    const decodedArg = decodeAbiParameters([param], value) || [];\n    return decodedArg[0];\n}\n//# sourceMappingURL=decodeEventLog.js.map","// TODO(v3): checksum address.\nimport { AbiEventSignatureNotFoundError, DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { decodeEventLog, } from './decodeEventLog.js';\n/**\n * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)\n * from a set of opaque logs.\n *\n * @param parameters - {@link ParseEventLogsParameters}\n * @returns The logs. {@link ParseEventLogsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { parseEventLogs } from 'viem/op-stack'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getTransactionReceipt(client, {\n *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',\n * })\n *\n * const logs = parseEventLogs({ logs: receipt.logs })\n * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]\n */\nexport function parseEventLogs({ abi, eventName, logs, strict = true, }) {\n    return logs\n        .map((log) => {\n        try {\n            const event = decodeEventLog({\n                ...log,\n                abi,\n                strict,\n            });\n            if (eventName && !eventName.includes(event.eventName))\n                return null;\n            return { ...event, ...log };\n        }\n        catch (err) {\n            let eventName;\n            let isUnnamed;\n            if (err instanceof AbiEventSignatureNotFoundError)\n                return null;\n            if (err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict)\n                    return null;\n                eventName = err.abiItem.name;\n                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n            }\n            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n            return { ...log, args: isUnnamed ? [] : {}, eventName };\n        }\n    })\n        .filter(Boolean);\n}\n//# sourceMappingURL=parseEventLogs.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs(client, { address, blockHash, fromBlock, toBlock, event, events: events_, args, strict: strict_, } = {}) {\n    const strict = strict_ ?? false;\n    const events = events_ ?? (event ? [event] : undefined);\n    let topics = [];\n    if (events) {\n        topics = [\n            events.flatMap((event) => encodeEventTopics({\n                abi: [event],\n                eventName: event.name,\n                args,\n            })),\n        ];\n        if (event)\n            topics = topics[0];\n    }\n    let logs;\n    if (blockHash) {\n        logs = await client.request({\n            method: 'eth_getLogs',\n            params: [{ address, topics, blockHash }],\n        });\n    }\n    else {\n        logs = await client.request({\n            method: 'eth_getLogs',\n            params: [\n                {\n                    address,\n                    topics,\n                    fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                    toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                },\n            ],\n        });\n    }\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!events)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: events,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getLogs.js.map","import { getAbiItem, } from '../../utils/abi/getAbiItem.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getLogs, } from './getLogs.js';\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/actions/public/getContractEvents\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents(client, parameters) {\n    const { abi, address, args, blockHash, eventName, fromBlock, toBlock, strict, } = parameters;\n    const event = eventName\n        ? getAbiItem({ abi, name: eventName })\n        : undefined;\n    const events = !event\n        ? abi.filter((x) => x.type === 'event')\n        : undefined;\n    return getAction(client, getLogs, 'getLogs')({\n        address,\n        args,\n        blockHash,\n        event,\n        events,\n        fromBlock,\n        toBlock,\n        strict,\n    });\n}\n//# sourceMappingURL=getContractEvents.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatFeeHistory, } from '../../utils/formatters/feeHistory.js';\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory(client, { blockCount, blockNumber, blockTag = 'latest', rewardPercentiles, }) {\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n    const feeHistory = await client.request({\n        method: 'eth_feeHistory',\n        params: [\n            numberToHex(blockCount),\n            blockNumberHex || blockTag,\n            rewardPercentiles,\n        ],\n    });\n    return formatFeeHistory(feeHistory);\n}\n//# sourceMappingURL=getFeeHistory.js.map","export function formatFeeHistory(feeHistory) {\n    return {\n        baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n        gasUsedRatio: feeHistory.gasUsedRatio,\n        oldestBlock: BigInt(feeHistory.oldestBlock),\n        reward: feeHistory.reward?.map((reward) => reward.map((value) => BigInt(value))),\n    };\n}\n//# sourceMappingURL=feeHistory.js.map","import { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges(_client, { filter, }) {\n    const strict = 'strict' in filter && filter.strict;\n    const logs = await filter.request({\n        method: 'eth_getFilterChanges',\n        params: [filter.id],\n    });\n    if (typeof logs[0] === 'string')\n        return logs;\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!('abi' in filter) || !filter.abi)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: filter.abi,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getFilterChanges.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatProof, } from '../../utils/formatters/proof.js';\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof(client, { address, blockNumber, blockTag: blockTag_, storageKeys, }) {\n    const blockTag = blockTag_ ?? 'latest';\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const proof = await client.request({\n        method: 'eth_getProof',\n        params: [address, storageKeys, blockNumberHex || blockTag],\n    });\n    return formatProof(proof);\n}\n//# sourceMappingURL=getProof.js.map","import { hexToNumber } from '../index.js';\nfunction formatStorageProof(storageProof) {\n    return storageProof.map((proof) => ({\n        ...proof,\n        value: BigInt(proof.value),\n    }));\n}\nexport function formatProof(proof) {\n    return {\n        ...proof,\n        balance: proof.balance ? BigInt(proof.balance) : undefined,\n        nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n        storageProof: proof.storageProof\n            ? formatStorageProof(proof.storageProof)\n            : undefined,\n    };\n}\n//# sourceMappingURL=proof.js.map","import { TransactionNotFoundError } from '../../errors/transaction.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatTransaction, } from '../../utils/formatters/transaction.js';\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction(client, { blockHash, blockNumber, blockTag: blockTag_, hash, index, }) {\n    const blockTag = blockTag_ || 'latest';\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let transaction = null;\n    if (hash) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByHash',\n            params: [hash],\n        });\n    }\n    else if (blockHash) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByBlockHashAndIndex',\n            params: [blockHash, numberToHex(index)],\n        });\n    }\n    else if (blockNumberHex || blockTag) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByBlockNumberAndIndex',\n            params: [blockNumberHex || blockTag, numberToHex(index)],\n        });\n    }\n    if (!transaction)\n        throw new TransactionNotFoundError({\n            blockHash,\n            blockNumber,\n            blockTag,\n            hash,\n            index,\n        });\n    const format = client.chain?.formatters?.transaction?.format || formatTransaction;\n    return format(transaction);\n}\n//# sourceMappingURL=getTransaction.js.map","import { TransactionReceiptNotFoundError, } from '../../errors/transaction.js';\nimport { formatTransactionReceipt, } from '../../utils/formatters/transactionReceipt.js';\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt(client, { hash }) {\n    const receipt = await client.request({\n        method: 'eth_getTransactionReceipt',\n        params: [hash],\n    });\n    if (!receipt)\n        throw new TransactionReceiptNotFoundError({ hash });\n    const format = client.chain?.formatters?.transactionReceipt?.format ||\n        formatTransactionReceipt;\n    return format(receipt);\n}\n//# sourceMappingURL=getTransactionReceipt.js.map","/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter(_client, { filter }) {\n    return filter.request({\n        method: 'eth_uninstallFilter',\n        params: [filter.id],\n    });\n}\n//# sourceMappingURL=uninstallFilter.js.map","export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n';\n//# sourceMappingURL=strings.js.map","import { presignMessagePrefix } from '../../constants/strings.js';\nimport { concat } from '../data/concat.js';\nimport { stringToBytes, toBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nexport function hashMessage(message, to_) {\n    const messageBytes = (() => {\n        if (typeof message === 'string')\n            return stringToBytes(message);\n        if (message.raw instanceof Uint8Array)\n            return message.raw;\n        return toBytes(message.raw);\n    })();\n    const prefixBytes = stringToBytes(`${presignMessagePrefix}${messageBytes.length}`);\n    return keccak256(concat([prefixBytes, messageBytes]), to_);\n}\n//# sourceMappingURL=hashMessage.js.map",null,"import { AbiConstructorNotFoundError, AbiConstructorParamsNotFoundError, } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nconst docsPath = '/docs/contract/encodeDeployData';\nexport function encodeDeployData(parameters) {\n    const { abi, args, bytecode } = parameters;\n    if (!args || args.length === 0)\n        return bytecode;\n    const description = abi.find((x) => 'type' in x && x.type === 'constructor');\n    if (!description)\n        throw new AbiConstructorNotFoundError({ docsPath });\n    if (!('inputs' in description))\n        throw new AbiConstructorParamsNotFoundError({ docsPath });\n    if (!description.inputs || description.inputs.length === 0)\n        throw new AbiConstructorParamsNotFoundError({ docsPath });\n    const data = encodeAbiParameters(description.inputs, args);\n    return concatHex([bytecode, data]);\n}\n//# sourceMappingURL=encodeDeployData.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { universalSignatureValidatorAbi } from '../../constants/abis.js';\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js';\nimport { CallExecutionError } from '../../errors/contract.js';\nimport { encodeDeployData, } from '../../utils/abi/encodeDeployData.js';\nimport { isBytesEqual, } from '../../utils/data/isBytesEqual.js';\nimport { isHex } from '../../utils/data/isHex.js';\nimport { bytesToHex } from '../../utils/encoding/toHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { serializeSignature } from '../../utils/signature/serializeSignature.js';\nimport { call } from './call.js';\n/**\n * Verifies a message hash onchain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash(client, { address, hash, signature, ...callRequest }) {\n    const signatureHex = (() => {\n        if (isHex(signature))\n            return signature;\n        if (typeof signature === 'object' && 'r' in signature && 's' in signature)\n            return serializeSignature(signature);\n        return bytesToHex(signature);\n    })();\n    try {\n        const { data } = await getAction(client, call, 'call')({\n            data: encodeDeployData({\n                abi: universalSignatureValidatorAbi,\n                args: [address, hash, signatureHex],\n                bytecode: universalSignatureValidatorByteCode,\n            }),\n            ...callRequest,\n        });\n        return isBytesEqual(data ?? '0x0', '0x1');\n    }\n    catch (error) {\n        if (error instanceof CallExecutionError) {\n            // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n            // this can happen for many reasons, for example if signer can not be recovered from the signature\n            // or if the signature has no valid format\n            return false;\n        }\n        throw error;\n    }\n}\n//# sourceMappingURL=verifyHash.js.map","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hexToBigInt } from '../encoding/fromHex.js';\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * serializeSignature({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   yParity: 1\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeSignature({ r, s, v, yParity }) {\n    const yParity_ = (() => {\n        if (yParity === 0 || yParity === 1)\n            return yParity;\n        if (v && (v === 27n || v === 28n || v >= 35n))\n            return v % 2n === 0n ? 1 : 0;\n        throw new Error('Invalid `v` or `yParity` value');\n    })();\n    return `0x${new secp256k1.Signature(hexToBigInt(r), hexToBigInt(s)).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}`;\n}\n//# sourceMappingURL=serializeSignature.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { isHex } from './isHex.js';\nexport function isBytesEqual(a_, b_) {\n    const a = isHex(a_) ? toBytes(a_) : a_;\n    const b = isHex(b_) ? toBytes(b_) : b_;\n    return equalBytes(a, b);\n}\n//# sourceMappingURL=isBytesEqual.js.map","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\n//# sourceMappingURL=regex.js.map","import { BytesSizeMismatchError } from '../errors/abi.js';\nimport { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from './address/isAddress.js';\nimport { size } from './data/size.js';\nimport { numberToHex } from './encoding/toHex.js';\nimport { bytesRegex, integerRegex } from './regex.js';\nimport { hashDomain, } from './signature/hashTypedData.js';\nexport function validateTypedData(parameters) {\n    const { domain, message, primaryType, types } = parameters;\n    const validateData = (struct, data) => {\n        for (const param of struct) {\n            const { name, type } = param;\n            const value = data[name];\n            const integerMatch = type.match(integerRegex);\n            if (integerMatch &&\n                (typeof value === 'number' || typeof value === 'bigint')) {\n                const [_type, base, size_] = integerMatch;\n                // If number cannot be cast to a sized hex value, it is out of range\n                // and will throw.\n                numberToHex(value, {\n                    signed: base === 'int',\n                    size: Number.parseInt(size_) / 8,\n                });\n            }\n            if (type === 'address' && typeof value === 'string' && !isAddress(value))\n                throw new InvalidAddressError({ address: value });\n            const bytesMatch = type.match(bytesRegex);\n            if (bytesMatch) {\n                const [_type, size_] = bytesMatch;\n                if (size_ && size(value) !== Number.parseInt(size_))\n                    throw new BytesSizeMismatchError({\n                        expectedSize: Number.parseInt(size_),\n                        givenSize: size(value),\n                    });\n            }\n            const struct = types[type];\n            if (struct)\n                validateData(struct, value);\n        }\n    };\n    // Validate domain types.\n    if (types.EIP712Domain && domain)\n        validateData(types.EIP712Domain, domain);\n    if (primaryType !== 'EIP712Domain') {\n        // Validate message types.\n        const type = types[primaryType];\n        validateData(type, message);\n    }\n}\nexport function getTypesForEIP712Domain({ domain, }) {\n    return [\n        typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n        domain?.version && { name: 'version', type: 'string' },\n        typeof domain?.chainId === 'number' && {\n            name: 'chainId',\n            type: 'uint256',\n        },\n        domain?.verifyingContract && {\n            name: 'verifyingContract',\n            type: 'address',\n        },\n        domain?.salt && { name: 'salt', type: 'bytes32' },\n    ].filter(Boolean);\n}\nexport function domainSeparator({ domain }) {\n    return hashDomain({\n        domain,\n        types: {\n            EIP712Domain: getTypesForEIP712Domain({ domain }),\n        },\n    });\n}\n//# sourceMappingURL=typedData.js.map","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\nimport { encodeAbiParameters, } from '../abi/encodeAbiParameters.js';\nimport { concat } from '../data/concat.js';\nimport { toHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { getTypesForEIP712Domain, validateTypedData, } from '../typedData.js';\nexport function hashTypedData(parameters) {\n    const { domain = {}, message, primaryType, } = parameters;\n    const types = {\n        EIP712Domain: getTypesForEIP712Domain({ domain }),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    validateTypedData({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = ['0x1901'];\n    if (domain)\n        parts.push(hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== 'EIP712Domain')\n        parts.push(hashStruct({\n            data: message,\n            primaryType,\n            types: types,\n        }));\n    return keccak256(concat(parts));\n}\nexport function hashDomain({ domain, types, }) {\n    return hashStruct({\n        data: domain,\n        primaryType: 'EIP712Domain',\n        types,\n    });\n}\nfunction hashStruct({ data, primaryType, types, }) {\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types,\n    });\n    return keccak256(encoded);\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: 'bytes32' }];\n    const encodedValues = [hashType({ primaryType, types })];\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return encodeAbiParameters(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = toHex(encodeType({ primaryType, types }));\n    return keccak256(encodedHashType);\n}\nfunction encodeType({ primaryType, types, }) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === 'bytes') {\n        const prepend = value.length % 2 ? '0' : '';\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: 'bytes32' }, keccak256(value)];\n    }\n    if (type === 'string')\n        return [{ type: 'bytes32' }, keccak256(toHex(value))];\n    if (type.lastIndexOf(']') === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeAbiParameters(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map","export const listenersCache = /*#__PURE__*/ new Map();\nexport const cleanupCache = /*#__PURE__*/ new Map();\nlet callbackCount = 0;\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe(observerId, callbacks, fn) {\n    const callbackId = ++callbackCount;\n    const getListeners = () => listenersCache.get(observerId) || [];\n    const unsubscribe = () => {\n        const listeners = getListeners();\n        listenersCache.set(observerId, listeners.filter((cb) => cb.id !== callbackId));\n    };\n    const unwatch = () => {\n        const cleanup = cleanupCache.get(observerId);\n        if (getListeners().length === 1 && cleanup)\n            cleanup();\n        unsubscribe();\n    };\n    const listeners = getListeners();\n    listenersCache.set(observerId, [\n        ...listeners,\n        { id: callbackId, fns: callbacks },\n    ]);\n    if (listeners && listeners.length > 0)\n        return unwatch;\n    const emit = {};\n    for (const key in callbacks) {\n        emit[key] = ((...args) => {\n            const listeners = getListeners();\n            if (listeners.length === 0)\n                return;\n            for (const listener of listeners)\n                listener.fns[key]?.(...args);\n        });\n    }\n    const cleanup = fn(emit);\n    if (typeof cleanup === 'function')\n        cleanupCache.set(observerId, cleanup);\n    return unwatch;\n}\n//# sourceMappingURL=observe.js.map","import { wait } from './wait.js';\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll(fn, { emitOnBegin, initialWaitTime, interval }) {\n    let active = true;\n    const unwatch = () => (active = false);\n    const watch = async () => {\n        let data = undefined;\n        if (emitOnBegin)\n            data = await fn({ unpoll: unwatch });\n        const initialWait = (await initialWaitTime?.(data)) ?? interval;\n        await wait(initialWait);\n        const poll = async () => {\n            if (!active)\n                return;\n            await fn({ unpoll: unwatch });\n            await wait(interval);\n            poll();\n        };\n        poll();\n    };\n    watch();\n    return unwatch;\n}\n//# sourceMappingURL=poll.js.map","import { hexToBigInt } from '../../utils/encoding/fromHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlockNumber, } from './getBlockNumber.js';\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber(client, { emitOnBegin = false, emitMissed = false, onBlockNumber, onError, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (client.transport.type === 'webSocket')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            client.transport.transports[0].config.type === 'webSocket')\n            return false;\n        return true;\n    })();\n    let prevBlockNumber;\n    const pollBlockNumber = () => {\n        const observerId = stringify([\n            'watchBlockNumber',\n            client.uid,\n            emitOnBegin,\n            emitMissed,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onBlockNumber, onError }, (emit) => poll(async () => {\n            try {\n                const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({ cacheTime: 0 });\n                if (prevBlockNumber) {\n                    // If the current block number is the same as the previous,\n                    // we can skip.\n                    if (blockNumber === prevBlockNumber)\n                        return;\n                    // If we have missed out on some previous blocks, and the\n                    // `emitMissed` flag is truthy, let's emit those blocks.\n                    if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                        for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                            emit.onBlockNumber(i, prevBlockNumber);\n                            prevBlockNumber = i;\n                        }\n                    }\n                }\n                // If the next block number is greater than the previous,\n                // it is not in the past, and we can emit the new block number.\n                if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n                    emit.onBlockNumber(blockNumber, prevBlockNumber);\n                    prevBlockNumber = blockNumber;\n                }\n            }\n            catch (err) {\n                emit.onError?.(err);\n            }\n        }, {\n            emitOnBegin,\n            interval: pollingInterval,\n        }));\n    };\n    const subscribeBlockNumber = () => {\n        const observerId = stringify([\n            'watchBlockNumber',\n            client.uid,\n            emitOnBegin,\n            emitMissed,\n        ]);\n        return observe(observerId, { onBlockNumber, onError }, (emit) => {\n            let active = true;\n            let unsubscribe = () => (active = false);\n            (async () => {\n                try {\n                    const transport = (() => {\n                        if (client.transport.type === 'fallback') {\n                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket');\n                            if (!transport)\n                                return client.transport;\n                            return transport.value;\n                        }\n                        return client.transport;\n                    })();\n                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                        params: ['newHeads'],\n                        onData(data) {\n                            if (!active)\n                                return;\n                            const blockNumber = hexToBigInt(data.result?.number);\n                            emit.onBlockNumber(blockNumber, prevBlockNumber);\n                            prevBlockNumber = blockNumber;\n                        },\n                        onError(error) {\n                            emit.onError?.(error);\n                        },\n                    });\n                    unsubscribe = unsubscribe_;\n                    if (!active)\n                        unsubscribe();\n                }\n                catch (err) {\n                    onError?.(err);\n                }\n            })();\n            return () => unsubscribe();\n        });\n    };\n    return enablePolling ? pollBlockNumber() : subscribeBlockNumber();\n}\n//# sourceMappingURL=watchBlockNumber.js.map","/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(message) {\n    const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n        ?.groups ?? {});\n    const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } = (message.match(suffixRegex)?.groups ?? {});\n    const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1);\n    return {\n        ...prefix,\n        ...suffix,\n        ...(chainId ? { chainId: Number(chainId) } : {}),\n        ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n        ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n        ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n        ...(requestId ? { requestId } : {}),\n        ...(resources ? { resources } : {}),\n        ...(scheme ? { scheme } : {}),\n        ...(statement ? { statement } : {}),\n    };\n}\n// https://regexr.com/80gdj\nconst prefixRegex = /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/;\n// https://regexr.com/80gf9\nconst suffixRegex = /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/;\n//# sourceMappingURL=parseSiweMessage.js.map","import { hashMessage } from '../../utils/signature/hashMessage.js';\nimport { parseSiweMessage } from '../../utils/siwe/parseSiweMessage.js';\nimport { validateSiweMessage, } from '../../utils/siwe/validateSiweMessage.js';\nimport { verifyHash, } from '../public/verifyHash.js';\n/**\n * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifySiweMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n */\nexport async function verifySiweMessage(client, parameters) {\n    const { address, domain, message, nonce, scheme, signature, time = new Date(), ...callRequest } = parameters;\n    const parsed = parseSiweMessage(message);\n    if (!parsed.address)\n        return false;\n    const isValid = validateSiweMessage({\n        address,\n        domain,\n        message: parsed,\n        nonce,\n        scheme,\n        time,\n    });\n    if (!isValid)\n        return false;\n    const hash = hashMessage(message);\n    return verifyHash(client, {\n        address: parsed.address,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifySiweMessage.js.map","import { isAddressEqual } from '../address/isAddressEqual.js';\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(parameters) {\n    const { address, domain, message, nonce, scheme, time = new Date(), } = parameters;\n    if (domain && message.domain !== domain)\n        return false;\n    if (nonce && message.nonce !== nonce)\n        return false;\n    if (scheme && message.scheme !== scheme)\n        return false;\n    if (message.expirationTime && time >= message.expirationTime)\n        return false;\n    if (message.notBefore && time < message.notBefore)\n        return false;\n    try {\n        if (!message.address)\n            return false;\n        if (address && !isAddressEqual(message.address, address))\n            return false;\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=validateSiweMessage.js.map","import { getEnsAddress, } from '../../actions/ens/getEnsAddress.js';\nimport { getEnsAvatar, } from '../../actions/ens/getEnsAvatar.js';\nimport { getEnsName, } from '../../actions/ens/getEnsName.js';\nimport { getEnsResolver, } from '../../actions/ens/getEnsResolver.js';\nimport { getEnsText, } from '../../actions/ens/getEnsText.js';\nimport { call, } from '../../actions/public/call.js';\nimport { createBlockFilter, } from '../../actions/public/createBlockFilter.js';\nimport { createContractEventFilter, } from '../../actions/public/createContractEventFilter.js';\nimport { createEventFilter, } from '../../actions/public/createEventFilter.js';\nimport { createPendingTransactionFilter, } from '../../actions/public/createPendingTransactionFilter.js';\nimport { estimateContractGas, } from '../../actions/public/estimateContractGas.js';\nimport { estimateFeesPerGas, } from '../../actions/public/estimateFeesPerGas.js';\nimport { estimateGas, } from '../../actions/public/estimateGas.js';\nimport { estimateMaxPriorityFeePerGas, } from '../../actions/public/estimateMaxPriorityFeePerGas.js';\nimport { getBalance, } from '../../actions/public/getBalance.js';\nimport { getBlobBaseFee, } from '../../actions/public/getBlobBaseFee.js';\nimport { getBlock, } from '../../actions/public/getBlock.js';\nimport { getBlockNumber, } from '../../actions/public/getBlockNumber.js';\nimport { getBlockTransactionCount, } from '../../actions/public/getBlockTransactionCount.js';\nimport { getBytecode, } from '../../actions/public/getBytecode.js';\nimport { getChainId, } from '../../actions/public/getChainId.js';\nimport { getContractEvents, } from '../../actions/public/getContractEvents.js';\nimport { getFeeHistory, } from '../../actions/public/getFeeHistory.js';\nimport { getFilterChanges, } from '../../actions/public/getFilterChanges.js';\nimport { getFilterLogs, } from '../../actions/public/getFilterLogs.js';\nimport { getGasPrice, } from '../../actions/public/getGasPrice.js';\nimport { getLogs, } from '../../actions/public/getLogs.js';\nimport { getProof, } from '../../actions/public/getProof.js';\nimport { getStorageAt, } from '../../actions/public/getStorageAt.js';\nimport { getTransaction, } from '../../actions/public/getTransaction.js';\nimport { getTransactionConfirmations, } from '../../actions/public/getTransactionConfirmations.js';\nimport { getTransactionCount, } from '../../actions/public/getTransactionCount.js';\nimport { getTransactionReceipt, } from '../../actions/public/getTransactionReceipt.js';\nimport { multicall, } from '../../actions/public/multicall.js';\nimport { readContract, } from '../../actions/public/readContract.js';\nimport { simulateContract, } from '../../actions/public/simulateContract.js';\nimport { uninstallFilter, } from '../../actions/public/uninstallFilter.js';\nimport { verifyMessage, } from '../../actions/public/verifyMessage.js';\nimport { verifyTypedData, } from '../../actions/public/verifyTypedData.js';\nimport { waitForTransactionReceipt, } from '../../actions/public/waitForTransactionReceipt.js';\nimport { watchBlockNumber, } from '../../actions/public/watchBlockNumber.js';\nimport { watchBlocks, } from '../../actions/public/watchBlocks.js';\nimport { watchContractEvent, } from '../../actions/public/watchContractEvent.js';\nimport { watchEvent, } from '../../actions/public/watchEvent.js';\nimport { watchPendingTransactions, } from '../../actions/public/watchPendingTransactions.js';\nimport { verifySiweMessage, } from '../../actions/siwe/verifySiweMessage.js';\nimport { prepareTransactionRequest, } from '../../actions/wallet/prepareTransactionRequest.js';\nimport { sendRawTransaction, } from '../../actions/wallet/sendRawTransaction.js';\nexport function publicActions(client) {\n    return {\n        call: (args) => call(client, args),\n        createBlockFilter: () => createBlockFilter(client),\n        createContractEventFilter: (args) => createContractEventFilter(client, args),\n        createEventFilter: (args) => createEventFilter(client, args),\n        createPendingTransactionFilter: () => createPendingTransactionFilter(client),\n        estimateContractGas: (args) => estimateContractGas(client, args),\n        estimateGas: (args) => estimateGas(client, args),\n        getBalance: (args) => getBalance(client, args),\n        getBlobBaseFee: () => getBlobBaseFee(client),\n        getBlock: (args) => getBlock(client, args),\n        getBlockNumber: (args) => getBlockNumber(client, args),\n        getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n        getBytecode: (args) => getBytecode(client, args),\n        getChainId: () => getChainId(client),\n        getContractEvents: (args) => getContractEvents(client, args),\n        getEnsAddress: (args) => getEnsAddress(client, args),\n        getEnsAvatar: (args) => getEnsAvatar(client, args),\n        getEnsName: (args) => getEnsName(client, args),\n        getEnsResolver: (args) => getEnsResolver(client, args),\n        getEnsText: (args) => getEnsText(client, args),\n        getFeeHistory: (args) => getFeeHistory(client, args),\n        estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n        getFilterChanges: (args) => getFilterChanges(client, args),\n        getFilterLogs: (args) => getFilterLogs(client, args),\n        getGasPrice: () => getGasPrice(client),\n        getLogs: (args) => getLogs(client, args),\n        getProof: (args) => getProof(client, args),\n        estimateMaxPriorityFeePerGas: (args) => estimateMaxPriorityFeePerGas(client, args),\n        getStorageAt: (args) => getStorageAt(client, args),\n        getTransaction: (args) => getTransaction(client, args),\n        getTransactionConfirmations: (args) => getTransactionConfirmations(client, args),\n        getTransactionCount: (args) => getTransactionCount(client, args),\n        getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n        multicall: (args) => multicall(client, args),\n        prepareTransactionRequest: (args) => prepareTransactionRequest(client, args),\n        readContract: (args) => readContract(client, args),\n        sendRawTransaction: (args) => sendRawTransaction(client, args),\n        simulateContract: (args) => simulateContract(client, args),\n        verifyMessage: (args) => verifyMessage(client, args),\n        verifySiweMessage: (args) => verifySiweMessage(client, args),\n        verifyTypedData: (args) => verifyTypedData(client, args),\n        uninstallFilter: (args) => uninstallFilter(client, args),\n        waitForTransactionReceipt: (args) => waitForTransactionReceipt(client, args),\n        watchBlocks: (args) => watchBlocks(client, args),\n        watchBlockNumber: (args) => watchBlockNumber(client, args),\n        watchContractEvent: (args) => watchContractEvent(client, args),\n        watchEvent: (args) => watchEvent(client, args),\n        watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n    };\n}\n//# sourceMappingURL=public.js.map","import { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter(client) {\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newBlockFilter',\n    });\n    const id = await client.request({\n        method: 'eth_newBlockFilter',\n    });\n    return { id, request: getRequest(id), type: 'block' };\n}\n//# sourceMappingURL=createBlockFilter.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { estimateGas, } from './estimateGas.js';\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas(client, parameters) {\n    const { abi, address, args, functionName, ...request } = parameters;\n    const data = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n    });\n    try {\n        const gas = await getAction(client, estimateGas, 'estimateGas')({\n            data,\n            to: address,\n            ...request,\n        });\n        return gas;\n    }\n    catch (error) {\n        const account = request.account ? parseAccount(request.account) : undefined;\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/estimateContractGas',\n            functionName,\n            sender: account?.address,\n        });\n    }\n}\n//# sourceMappingURL=estimateContractGas.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance(client, { address, blockNumber, blockTag = 'latest' }) {\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n    const balance = await client.request({\n        method: 'eth_getBalance',\n        params: [address, blockNumberHex || blockTag],\n    });\n    return BigInt(balance);\n}\n//# sourceMappingURL=getBalance.js.map","/**\n * Returns the base fee per blob gas in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n *\n * @param client - Client to use\n * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlobBaseFee } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blobBaseFee = await getBlobBaseFee(client)\n */\nexport async function getBlobBaseFee(client) {\n    const baseFee = await client.request({\n        method: 'eth_blobBaseFee',\n    });\n    return BigInt(baseFee);\n}\n//# sourceMappingURL=getBlobBaseFee.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount(client, { blockHash, blockNumber, blockTag = 'latest', } = {}) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let count;\n    if (blockHash) {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByHash',\n            params: [blockHash],\n        });\n    }\n    else {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByNumber',\n            params: [blockNumberHex || blockTag],\n        });\n    }\n    return hexToNumber(count);\n}\n//# sourceMappingURL=getBlockTransactionCount.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getBytecode\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBytecodeParameters}\n * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBytecode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getBytecode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getBytecode(client, { address, blockNumber, blockTag = 'latest' }) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const hex = await client.request({\n        method: 'eth_getCode',\n        params: [address, blockNumberHex || blockTag],\n    });\n    if (hex === '0x')\n        return undefined;\n    return hex;\n}\n//# sourceMappingURL=getBytecode.js.map","import { addressResolverAbi, universalResolverResolveAbi, } from '../../constants/abis.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { trim } from '../../utils/data/trim.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { namehash } from '../../utils/ens/namehash.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress(client, { blockNumber, blockTag, coinType, name, gatewayUrls, strict, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    try {\n        const functionData = encodeFunctionData({\n            abi: addressResolverAbi,\n            functionName: 'addr',\n            ...(coinType != null\n                ? { args: [namehash(name), BigInt(coinType)] }\n                : { args: [namehash(name)] }),\n        });\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverResolveAbi,\n            functionName: 'resolve',\n            args: [toHex(packetToBytes(name)), functionData],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const res = gatewayUrls\n            ? await readContractAction({\n                ...readContractParameters,\n                args: [...readContractParameters.args, gatewayUrls],\n            })\n            : await readContractAction(readContractParameters);\n        if (res[0] === '0x')\n            return null;\n        const address = decodeFunctionResult({\n            abi: addressResolverAbi,\n            args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n            functionName: 'addr',\n            data: res[0],\n        });\n        if (address === '0x')\n            return null;\n        if (trim(address) === '0x00')\n            return null;\n        return address;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'resolve'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsAddress.js.map","import { parseAvatarRecord, } from '../../utils/ens/avatar/parseAvatarRecord.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getEnsText, } from './getEnsText.js';\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar(client, { blockNumber, blockTag, assetGatewayUrls, name, gatewayUrls, strict, universalResolverAddress, }) {\n    const record = await getAction(client, getEnsText, 'getEnsText')({\n        blockNumber,\n        blockTag,\n        key: 'avatar',\n        name,\n        universalResolverAddress,\n        gatewayUrls,\n        strict,\n    });\n    if (!record)\n        return null;\n    try {\n        return await parseAvatarRecord(client, {\n            record,\n            gatewayUrls: assetGatewayUrls,\n        });\n    }\n    catch {\n        return null;\n    }\n}\n//# sourceMappingURL=getEnsAvatar.js.map","import { universalResolverReverseAbi } from '../../constants/abis.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName(client, { address, blockNumber, blockTag, gatewayUrls, strict, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`;\n    try {\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverReverseAbi,\n            functionName: 'reverse',\n            args: [toHex(packetToBytes(reverseNode))],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const [name, resolvedAddress] = gatewayUrls\n            ? await readContractAction({\n                ...readContractParameters,\n                args: [...readContractParameters.args, gatewayUrls],\n            })\n            : await readContractAction(readContractParameters);\n        if (address.toLowerCase() !== resolvedAddress.toLowerCase())\n            return null;\n        return name;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'reverse'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsName.js.map","import { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver(client, { blockNumber, blockTag, name, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    const [resolverAddress] = await getAction(client, readContract, 'readContract')({\n        address: universalResolverAddress,\n        abi: [\n            {\n                inputs: [{ type: 'bytes' }],\n                name: 'findResolver',\n                outputs: [{ type: 'address' }, { type: 'bytes32' }],\n                stateMutability: 'view',\n                type: 'function',\n            },\n        ],\n        functionName: 'findResolver',\n        args: [toHex(packetToBytes(name))],\n        blockNumber,\n        blockTag,\n    });\n    return resolverAddress;\n}\n//# sourceMappingURL=getEnsResolver.js.map","import { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs(_client, { filter, }) {\n    const strict = filter.strict ?? false;\n    const logs = await filter.request({\n        method: 'eth_getFilterLogs',\n        params: [filter.id],\n    });\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!filter.abi)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: filter.abi,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getFilterLogs.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt(client, { address, blockNumber, blockTag = 'latest', slot }) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const data = await client.request({\n        method: 'eth_getStorageAt',\n        params: [address, slot, blockNumberHex || blockTag],\n    });\n    return data;\n}\n//# sourceMappingURL=getStorageAt.js.map","import { getAction } from '../../utils/getAction.js';\nimport { getBlockNumber, } from './getBlockNumber.js';\nimport { getTransaction, } from './getTransaction.js';\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations(client, { hash, transactionReceipt }) {\n    const [blockNumber, transaction] = await Promise.all([\n        getAction(client, getBlockNumber, 'getBlockNumber')({}),\n        hash\n            ? getAction(client, getTransaction, 'getBlockNumber')({ hash })\n            : undefined,\n    ]);\n    const transactionBlockNumber = transactionReceipt?.blockNumber || transaction?.blockNumber;\n    if (!transactionBlockNumber)\n        return 0n;\n    return blockNumber - transactionBlockNumber + 1n;\n}\n//# sourceMappingURL=getTransactionConfirmations.js.map","import { multicall3Abi } from '../../constants/abis.js';\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { RawContractError } from '../../errors/contract.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract } from './readContract.js';\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall(client, parameters) {\n    const { allowFailure = true, batchSize: batchSize_, blockNumber, blockTag, multicallAddress: multicallAddress_, stateOverride, } = parameters;\n    const contracts = parameters.contracts;\n    const batchSize = batchSize_ ??\n        ((typeof client.batch?.multicall === 'object' &&\n            client.batch.multicall.batchSize) ||\n            1_024);\n    let multicallAddress = multicallAddress_;\n    if (!multicallAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. multicallAddress is required.');\n        multicallAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'multicall3',\n        });\n    }\n    const chunkedCalls = [[]];\n    let currentChunk = 0;\n    let currentChunkSize = 0;\n    for (let i = 0; i < contracts.length; i++) {\n        const { abi, address, args, functionName } = contracts[i];\n        try {\n            const callData = encodeFunctionData({ abi, args, functionName });\n            currentChunkSize += (callData.length - 2) / 2;\n            // Check to see if we need to create a new chunk.\n            if (\n            // Check if batching is enabled.\n            batchSize > 0 &&\n                // Check if the current size of the batch exceeds the size limit.\n                currentChunkSize > batchSize &&\n                // Check if the current chunk is not already empty.\n                chunkedCalls[currentChunk].length > 0) {\n                currentChunk++;\n                currentChunkSize = (callData.length - 2) / 2;\n                chunkedCalls[currentChunk] = [];\n            }\n            chunkedCalls[currentChunk] = [\n                ...chunkedCalls[currentChunk],\n                {\n                    allowFailure: true,\n                    callData,\n                    target: address,\n                },\n            ];\n        }\n        catch (err) {\n            const error = getContractError(err, {\n                abi,\n                address,\n                args,\n                docsPath: '/docs/contract/multicall',\n                functionName,\n            });\n            if (!allowFailure)\n                throw error;\n            chunkedCalls[currentChunk] = [\n                ...chunkedCalls[currentChunk],\n                {\n                    allowFailure: true,\n                    callData: '0x',\n                    target: address,\n                },\n            ];\n        }\n    }\n    const aggregate3Results = await Promise.allSettled(chunkedCalls.map((calls) => getAction(client, readContract, 'readContract')({\n        abi: multicall3Abi,\n        address: multicallAddress,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n        stateOverride,\n    })));\n    const results = [];\n    for (let i = 0; i < aggregate3Results.length; i++) {\n        const result = aggregate3Results[i];\n        // If an error occurred in a `readContract` invocation (ie. network error),\n        // then append the failure reason to each contract result.\n        if (result.status === 'rejected') {\n            if (!allowFailure)\n                throw result.reason;\n            for (let j = 0; j < chunkedCalls[i].length; j++) {\n                results.push({\n                    status: 'failure',\n                    error: result.reason,\n                    result: undefined,\n                });\n            }\n            continue;\n        }\n        // If the `readContract` call was successful, then decode the results.\n        const aggregate3Result = result.value;\n        for (let j = 0; j < aggregate3Result.length; j++) {\n            // Extract the response from `readContract`\n            const { returnData, success } = aggregate3Result[j];\n            // Extract the request call data from the original call.\n            const { callData } = chunkedCalls[i][j];\n            // Extract the contract config for this call from the `contracts` argument\n            // for decoding.\n            const { abi, address, functionName, args } = contracts[results.length];\n            try {\n                if (callData === '0x')\n                    throw new AbiDecodingZeroDataError();\n                if (!success)\n                    throw new RawContractError({ data: returnData });\n                const result = decodeFunctionResult({\n                    abi,\n                    args,\n                    data: returnData,\n                    functionName,\n                });\n                results.push(allowFailure ? { result, status: 'success' } : result);\n            }\n            catch (err) {\n                const error = getContractError(err, {\n                    abi,\n                    address,\n                    args,\n                    docsPath: '/docs/contract/multicall',\n                    functionName,\n                });\n                if (!allowFailure)\n                    throw error;\n                results.push({ error, result: undefined, status: 'failure' });\n            }\n        }\n    }\n    if (results.length !== contracts.length)\n        throw new BaseError('multicall results mismatch');\n    return results;\n}\n//# sourceMappingURL=multicall.js.map","/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction(client, { serializedTransaction }) {\n    return client.request({\n        method: 'eth_sendRawTransaction',\n        params: [serializedTransaction],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=sendRawTransaction.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { call } from './call.js';\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract(client, parameters) {\n    const { abi, address, args, dataSuffix, functionName, ...callRequest } = parameters;\n    const account = callRequest.account\n        ? parseAccount(callRequest.account)\n        : client.account;\n    const calldata = encodeFunctionData({ abi, args, functionName });\n    try {\n        const { data } = await getAction(client, call, 'call')({\n            batch: false,\n            data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n            to: address,\n            ...callRequest,\n            account,\n        });\n        const result = decodeFunctionResult({\n            abi,\n            args,\n            functionName,\n            data: data || '0x',\n        });\n        const minimizedAbi = abi.filter((abiItem) => 'name' in abiItem && abiItem.name === parameters.functionName);\n        return {\n            result,\n            request: {\n                abi: minimizedAbi,\n                address,\n                args,\n                dataSuffix,\n                functionName,\n                ...callRequest,\n                account,\n            },\n        };\n    }\n    catch (error) {\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/simulateContract',\n            functionName,\n            sender: account?.address,\n        });\n    }\n}\n//# sourceMappingURL=simulateContract.js.map","import { hashMessage } from '../../utils/signature/hashMessage.js';\nimport { verifyHash, } from './verifyHash.js';\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage(client, { address, message, signature, ...callRequest }) {\n    const hash = hashMessage(message);\n    return verifyHash(client, {\n        address,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifyMessage.js.map","import { hashTypedData, } from '../../utils/signature/hashTypedData.js';\nimport { verifyHash, } from './verifyHash.js';\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData(client, parameters) {\n    const { address, signature, message, primaryType, types, domain, ...callRequest } = parameters;\n    const hash = hashTypedData({ message, primaryType, types, domain });\n    return verifyHash(client, {\n        address,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifyTypedData.js.map","import { BlockNotFoundError } from '../../errors/block.js';\nimport { TransactionNotFoundError, TransactionReceiptNotFoundError, WaitForTransactionReceiptTimeoutError, } from '../../errors/transaction.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { withRetry, } from '../../utils/promise/withRetry.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlock } from './getBlock.js';\nimport { getTransaction, } from './getTransaction.js';\nimport { getTransactionReceipt, } from './getTransactionReceipt.js';\nimport { watchBlockNumber, } from './watchBlockNumber.js';\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt(client, { confirmations = 1, hash, onReplaced, pollingInterval = client.pollingInterval, retryCount = 6, retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\ntimeout, }) {\n    const observerId = stringify(['waitForTransactionReceipt', client.uid, hash]);\n    let count = 0;\n    let transaction;\n    let replacedTransaction;\n    let receipt;\n    let retrying = false;\n    return new Promise((resolve, reject) => {\n        if (timeout)\n            setTimeout(() => reject(new WaitForTransactionReceiptTimeoutError({ hash })), timeout);\n        const _unobserve = observe(observerId, { onReplaced, resolve, reject }, (emit) => {\n            const _unwatch = getAction(client, watchBlockNumber, 'watchBlockNumber')({\n                emitMissed: true,\n                emitOnBegin: true,\n                poll: true,\n                pollingInterval,\n                async onBlockNumber(blockNumber_) {\n                    const done = (fn) => {\n                        _unwatch();\n                        fn();\n                        _unobserve();\n                    };\n                    let blockNumber = blockNumber_;\n                    if (retrying)\n                        return;\n                    if (count > retryCount)\n                        done(() => emit.reject(new WaitForTransactionReceiptTimeoutError({ hash })));\n                    try {\n                        // If we already have a valid receipt, let's check if we have enough\n                        // confirmations. If we do, then we can resolve.\n                        if (receipt) {\n                            if (confirmations > 1 &&\n                                (!receipt.blockNumber ||\n                                    blockNumber - receipt.blockNumber + 1n < confirmations))\n                                return;\n                            done(() => emit.resolve(receipt));\n                            return;\n                        }\n                        // Get the transaction to check if it's been replaced.\n                        // We need to retry as some RPC Providers may be slow to sync\n                        // up mined transactions.\n                        if (!transaction) {\n                            retrying = true;\n                            await withRetry(async () => {\n                                transaction = (await getAction(client, getTransaction, 'getTransaction')({ hash }));\n                                if (transaction.blockNumber)\n                                    blockNumber = transaction.blockNumber;\n                            }, {\n                                delay: retryDelay,\n                                retryCount,\n                            });\n                            retrying = false;\n                        }\n                        // Get the receipt to check if it's been processed.\n                        receipt = await getAction(client, getTransactionReceipt, 'getTransactionReceipt')({ hash });\n                        // Check if we have enough confirmations. If not, continue polling.\n                        if (confirmations > 1 &&\n                            (!receipt.blockNumber ||\n                                blockNumber - receipt.blockNumber + 1n < confirmations))\n                            return;\n                        done(() => emit.resolve(receipt));\n                    }\n                    catch (err) {\n                        // If the receipt is not found, the transaction will be pending.\n                        // We need to check if it has potentially been replaced.\n                        if (err instanceof TransactionNotFoundError ||\n                            err instanceof TransactionReceiptNotFoundError) {\n                            if (!transaction) {\n                                retrying = false;\n                                return;\n                            }\n                            try {\n                                replacedTransaction = transaction;\n                                // Let's retrieve the transactions from the current block.\n                                // We need to retry as some RPC Providers may be slow to sync\n                                // up mined blocks.\n                                retrying = true;\n                                const block = await withRetry(() => getAction(client, getBlock, 'getBlock')({\n                                    blockNumber,\n                                    includeTransactions: true,\n                                }), {\n                                    delay: retryDelay,\n                                    retryCount,\n                                    shouldRetry: ({ error }) => error instanceof BlockNotFoundError,\n                                });\n                                retrying = false;\n                                const replacementTransaction = block.transactions.find(({ from, nonce }) => from === replacedTransaction.from &&\n                                    nonce === replacedTransaction.nonce);\n                                // If we couldn't find a replacement transaction, continue polling.\n                                if (!replacementTransaction)\n                                    return;\n                                // If we found a replacement transaction, return it's receipt.\n                                receipt = await getAction(client, getTransactionReceipt, 'getTransactionReceipt')({\n                                    hash: replacementTransaction.hash,\n                                });\n                                // Check if we have enough confirmations. If not, continue polling.\n                                if (confirmations > 1 &&\n                                    (!receipt.blockNumber ||\n                                        blockNumber - receipt.blockNumber + 1n < confirmations))\n                                    return;\n                                let reason = 'replaced';\n                                if (replacementTransaction.to === replacedTransaction.to &&\n                                    replacementTransaction.value === replacedTransaction.value) {\n                                    reason = 'repriced';\n                                }\n                                else if (replacementTransaction.from === replacementTransaction.to &&\n                                    replacementTransaction.value === 0n) {\n                                    reason = 'cancelled';\n                                }\n                                done(() => {\n                                    emit.onReplaced?.({\n                                        reason,\n                                        replacedTransaction: replacedTransaction,\n                                        transaction: replacementTransaction,\n                                        transactionReceipt: receipt,\n                                    });\n                                    emit.resolve(receipt);\n                                });\n                            }\n                            catch (err_) {\n                                done(() => emit.reject(err_));\n                            }\n                        }\n                        else {\n                            done(() => emit.reject(err));\n                        }\n                    }\n                    finally {\n                        count++;\n                    }\n                },\n            });\n        });\n    });\n}\n//# sourceMappingURL=waitForTransactionReceipt.js.map","import { formatBlock } from '../../utils/formatters/block.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlock } from './getBlock.js';\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks(client, { blockTag = 'latest', emitMissed = false, emitOnBegin = false, onBlock, onError, includeTransactions: includeTransactions_, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (client.transport.type === 'webSocket')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            client.transport.transports[0].config.type === 'webSocket')\n            return false;\n        return true;\n    })();\n    const includeTransactions = includeTransactions_ ?? false;\n    let prevBlock;\n    const pollBlocks = () => {\n        const observerId = stringify([\n            'watchBlocks',\n            client.uid,\n            blockTag,\n            emitMissed,\n            emitOnBegin,\n            includeTransactions,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onBlock, onError }, (emit) => poll(async () => {\n            try {\n                const block = await getAction(client, getBlock, 'getBlock')({\n                    blockTag,\n                    includeTransactions,\n                });\n                if (block.number && prevBlock?.number) {\n                    // If the current block number is the same as the previous,\n                    // we can skip.\n                    if (block.number === prevBlock.number)\n                        return;\n                    // If we have missed out on some previous blocks, and the\n                    // `emitMissed` flag is truthy, let's emit those blocks.\n                    if (block.number - prevBlock.number > 1 && emitMissed) {\n                        for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                            const block = (await getAction(client, getBlock, 'getBlock')({\n                                blockNumber: i,\n                                includeTransactions,\n                            }));\n                            emit.onBlock(block, prevBlock);\n                            prevBlock = block;\n                        }\n                    }\n                }\n                if (\n                // If no previous block exists, emit.\n                !prevBlock?.number ||\n                    // If the block tag is \"pending\" with no block number, emit.\n                    (blockTag === 'pending' && !block?.number) ||\n                    // If the next block number is greater than the previous block number, emit.\n                    // We don't want to emit blocks in the past.\n                    (block.number && block.number > prevBlock.number)) {\n                    emit.onBlock(block, prevBlock);\n                    prevBlock = block;\n                }\n            }\n            catch (err) {\n                emit.onError?.(err);\n            }\n        }, {\n            emitOnBegin,\n            interval: pollingInterval,\n        }));\n    };\n    const subscribeBlocks = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const transport = (() => {\n                    if (client.transport.type === 'fallback') {\n                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket');\n                        if (!transport)\n                            return client.transport;\n                        return transport.value;\n                    }\n                    return client.transport;\n                })();\n                const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                    params: ['newHeads'],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const format = client.chain?.formatters?.block?.format || formatBlock;\n                        const block = format(data.result);\n                        onBlock(block, prevBlock);\n                        prevBlock = block;\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling ? pollBlocks() : subscribeBlocks();\n}\n//# sourceMappingURL=watchBlocks.js.map","import { DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { InvalidInputRpcError } from '../../errors/rpc.js';\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js';\nimport { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { formatLog } from '../../utils/formatters/log.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { createContractEventFilter } from './createContractEventFilter.js';\nimport { getBlockNumber } from './getBlockNumber.js';\nimport { getContractEvents, } from './getContractEvents.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent(client, parameters) {\n    const { abi, address, args, batch = true, eventName, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, } = parameters;\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (typeof fromBlock === 'bigint')\n            return true;\n        if (client.transport.type === 'webSocket')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            client.transport.transports[0].config.type === 'webSocket')\n            return false;\n        return true;\n    })();\n    const pollContractEvent = () => {\n        const strict = strict_ ?? false;\n        const observerId = stringify([\n            'watchContractEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            eventName,\n            pollingInterval,\n            strict,\n            fromBlock,\n        ]);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            let previousBlockNumber;\n            if (fromBlock !== undefined)\n                previousBlockNumber = fromBlock - 1n;\n            let filter;\n            let initialized = false;\n            const unwatch = poll(async () => {\n                if (!initialized) {\n                    try {\n                        filter = (await getAction(client, createContractEventFilter, 'createContractEventFilter')({\n                            abi,\n                            address,\n                            args: args,\n                            eventName: eventName,\n                            strict: strict,\n                            fromBlock,\n                        }));\n                    }\n                    catch { }\n                    initialized = true;\n                    return;\n                }\n                try {\n                    let logs;\n                    if (filter) {\n                        logs = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    }\n                    else {\n                        // If the filter doesn't exist, we will fall back to use `getLogs`.\n                        // The fall back exists because some RPC Providers do not support filters.\n                        // Fetch the block number to use for `getLogs`.\n                        const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({});\n                        // If the block number has changed, we will need to fetch the logs.\n                        // If the block number doesn't exist, we are yet to reach the first poll interval,\n                        // so do not emit any logs.\n                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                            logs = await getAction(client, getContractEvents, 'getContractEvents')({\n                                abi,\n                                address,\n                                args,\n                                eventName,\n                                fromBlock: previousBlockNumber + 1n,\n                                toBlock: blockNumber,\n                                strict,\n                            });\n                        }\n                        else {\n                            logs = [];\n                        }\n                        previousBlockNumber = blockNumber;\n                    }\n                    if (logs.length === 0)\n                        return;\n                    if (batch)\n                        emit.onLogs(logs);\n                    else\n                        for (const log of logs)\n                            emit.onLogs([log]);\n                }\n                catch (err) {\n                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n                    // Reinitalize the filter when this occurs\n                    if (filter && err instanceof InvalidInputRpcError)\n                        initialized = false;\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribeContractEvent = () => {\n        const strict = strict_ ?? false;\n        const observerId = stringify([\n            'watchContractEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            eventName,\n            pollingInterval,\n            strict,\n        ]);\n        let active = true;\n        let unsubscribe = () => (active = false);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            ;\n            (async () => {\n                try {\n                    const transport = (() => {\n                        if (client.transport.type === 'fallback') {\n                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket');\n                            if (!transport)\n                                return client.transport;\n                            return transport.value;\n                        }\n                        return client.transport;\n                    })();\n                    const topics = eventName\n                        ? encodeEventTopics({\n                            abi: abi,\n                            eventName: eventName,\n                            args,\n                        })\n                        : [];\n                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                        params: ['logs', { address, topics }],\n                        onData(data) {\n                            if (!active)\n                                return;\n                            const log = data.result;\n                            try {\n                                const { eventName, args } = decodeEventLog({\n                                    abi: abi,\n                                    data: log.data,\n                                    topics: log.topics,\n                                    strict: strict_,\n                                });\n                                const formatted = formatLog(log, {\n                                    args,\n                                    eventName: eventName,\n                                });\n                                emit.onLogs([formatted]);\n                            }\n                            catch (err) {\n                                let eventName;\n                                let isUnnamed;\n                                if (err instanceof DecodeLogDataMismatch ||\n                                    err instanceof DecodeLogTopicsMismatch) {\n                                    // If strict mode is on, and log data/topics do not match event definition, skip.\n                                    if (strict_)\n                                        return;\n                                    eventName = err.abiItem.name;\n                                    isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n                                }\n                                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                                const formatted = formatLog(log, {\n                                    args: isUnnamed ? [] : {},\n                                    eventName,\n                                });\n                                emit.onLogs([formatted]);\n                            }\n                        },\n                        onError(error) {\n                            emit.onError?.(error);\n                        },\n                    });\n                    unsubscribe = unsubscribe_;\n                    if (!active)\n                        unsubscribe();\n                }\n                catch (err) {\n                    onError?.(err);\n                }\n            })();\n            return () => unsubscribe();\n        });\n    };\n    return enablePolling ? pollContractEvent() : subscribeContractEvent();\n}\n//# sourceMappingURL=watchContractEvent.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { InvalidInputRpcError } from '../../errors/rpc.js';\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js';\nimport { formatLog } from '../../utils/formatters/log.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { createEventFilter, } from './createEventFilter.js';\nimport { getBlockNumber } from './getBlockNumber.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { getLogs } from './getLogs.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent(client, { address, args, batch = true, event, events, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (typeof fromBlock === 'bigint')\n            return true;\n        if (client.transport.type === 'webSocket')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            client.transport.transports[0].config.type === 'webSocket')\n            return false;\n        return true;\n    })();\n    const strict = strict_ ?? false;\n    const pollEvent = () => {\n        const observerId = stringify([\n            'watchEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            event,\n            pollingInterval,\n            fromBlock,\n        ]);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            let previousBlockNumber;\n            if (fromBlock !== undefined)\n                previousBlockNumber = fromBlock - 1n;\n            let filter;\n            let initialized = false;\n            const unwatch = poll(async () => {\n                if (!initialized) {\n                    try {\n                        filter = (await getAction(client, createEventFilter, 'createEventFilter')({\n                            address,\n                            args,\n                            event: event,\n                            events,\n                            strict,\n                            fromBlock,\n                        }));\n                    }\n                    catch { }\n                    initialized = true;\n                    return;\n                }\n                try {\n                    let logs;\n                    if (filter) {\n                        logs = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    }\n                    else {\n                        // If the filter doesn't exist, we will fall back to use `getLogs`.\n                        // The fall back exists because some RPC Providers do not support filters.\n                        // Fetch the block number to use for `getLogs`.\n                        const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({});\n                        // If the block number has changed, we will need to fetch the logs.\n                        // If the block number doesn't exist, we are yet to reach the first poll interval,\n                        // so do not emit any logs.\n                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                            logs = await getAction(client, getLogs, 'getLogs')({\n                                address,\n                                args,\n                                event: event,\n                                events,\n                                fromBlock: previousBlockNumber + 1n,\n                                toBlock: blockNumber,\n                            });\n                        }\n                        else {\n                            logs = [];\n                        }\n                        previousBlockNumber = blockNumber;\n                    }\n                    if (logs.length === 0)\n                        return;\n                    if (batch)\n                        emit.onLogs(logs);\n                    else\n                        for (const log of logs)\n                            emit.onLogs([log]);\n                }\n                catch (err) {\n                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n                    // Reinitalize the filter when this occurs\n                    if (filter && err instanceof InvalidInputRpcError)\n                        initialized = false;\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribeEvent = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const transport = (() => {\n                    if (client.transport.type === 'fallback') {\n                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket');\n                        if (!transport)\n                            return client.transport;\n                        return transport.value;\n                    }\n                    return client.transport;\n                })();\n                const events_ = events ?? (event ? [event] : undefined);\n                let topics = [];\n                if (events_) {\n                    topics = [\n                        events_.flatMap((event) => encodeEventTopics({\n                            abi: [event],\n                            eventName: event.name,\n                            args,\n                        })),\n                    ];\n                    if (event)\n                        topics = topics[0];\n                }\n                const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                    params: ['logs', { address, topics }],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const log = data.result;\n                        try {\n                            const { eventName, args } = decodeEventLog({\n                                abi: events_ ?? [],\n                                data: log.data,\n                                topics: log.topics,\n                                strict,\n                            });\n                            const formatted = formatLog(log, { args, eventName });\n                            onLogs([formatted]);\n                        }\n                        catch (err) {\n                            let eventName;\n                            let isUnnamed;\n                            if (err instanceof DecodeLogDataMismatch ||\n                                err instanceof DecodeLogTopicsMismatch) {\n                                // If strict mode is on, and log data/topics do not match event definition, skip.\n                                if (strict_)\n                                    return;\n                                eventName = err.abiItem.name;\n                                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n                            }\n                            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                            const formatted = formatLog(log, {\n                                args: isUnnamed ? [] : {},\n                                eventName,\n                            });\n                            onLogs([formatted]);\n                        }\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling ? pollEvent() : subscribeEvent();\n}\n//# sourceMappingURL=watchEvent.js.map","import { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions(client, { batch = true, onError, onTransactions, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket';\n    const pollPendingTransactions = () => {\n        const observerId = stringify([\n            'watchPendingTransactions',\n            client.uid,\n            batch,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onTransactions, onError }, (emit) => {\n            let filter;\n            const unwatch = poll(async () => {\n                try {\n                    if (!filter) {\n                        try {\n                            filter = await getAction(client, createPendingTransactionFilter, 'createPendingTransactionFilter')({});\n                            return;\n                        }\n                        catch (err) {\n                            unwatch();\n                            throw err;\n                        }\n                    }\n                    const hashes = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    if (hashes.length === 0)\n                        return;\n                    if (batch)\n                        emit.onTransactions(hashes);\n                    else\n                        for (const hash of hashes)\n                            emit.onTransactions([hash]);\n                }\n                catch (err) {\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribePendingTransactions = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n                    params: ['newPendingTransactions'],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const transaction = data.result;\n                        onTransactions([transaction]);\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling\n        ? pollPendingTransactions()\n        : subscribePendingTransactions();\n}\n//# sourceMappingURL=watchPendingTransactions.js.map","import { createClient, } from './createClient.js';\nimport { publicActions } from './decorators/public.js';\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient(parameters) {\n    const { key = 'public', name = 'Public Client' } = parameters;\n    const client = createClient({\n        ...parameters,\n        key,\n        name,\n        type: 'publicClient',\n    });\n    return client.extend(publicActions);\n}\n//# sourceMappingURL=createPublicClient.js.map","import { parseAccount } from '../utils/accounts.js';\nimport { uid } from '../utils/uid.js';\nexport function createClient(parameters) {\n    const { batch, cacheTime = parameters.pollingInterval ?? 4_000, ccipRead, key = 'base', name = 'Base Client', pollingInterval = 4_000, type = 'base', } = parameters;\n    const chain = parameters.chain;\n    const account = parameters.account\n        ? parseAccount(parameters.account)\n        : undefined;\n    const { config, request, value } = parameters.transport({\n        chain,\n        pollingInterval,\n    });\n    const transport = { ...config, ...value };\n    const client = {\n        account,\n        batch,\n        cacheTime,\n        ccipRead,\n        chain,\n        key,\n        name,\n        pollingInterval,\n        request,\n        transport,\n        type,\n        uid: uid(),\n    };\n    function extend(base) {\n        return (extendFn) => {\n            const extended = extendFn(base);\n            for (const key in client)\n                delete extended[key];\n            const combined = { ...base, ...extended };\n            return Object.assign(combined, { extend: extend(combined) });\n        };\n    }\n    return Object.assign(client, { extend: extend(client) });\n}\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema() {\n    return null;\n}\n//# sourceMappingURL=createClient.js.map","export function extractChain({ chains, id, }) {\n    return chains.find((chain) => chain.id === id);\n}\n//# sourceMappingURL=extractChain.js.map","import { InvalidBytesBooleanError } from '../../errors/encoding.js';\nimport { trim } from '../data/trim.js';\nimport { assertSize, hexToBigInt, hexToNumber, } from './fromHex.js';\nimport { bytesToHex } from './toHex.js';\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes(bytes, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return bytesToNumber(bytes, opts);\n    if (to === 'bigint')\n        return bytesToBigInt(bytes, opts);\n    if (to === 'boolean')\n        return bytesToBool(bytes, opts);\n    if (to === 'string')\n        return bytesToString(bytes, opts);\n    return bytesToHex(bytes, opts);\n}\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToBigInt(hex, opts);\n}\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes);\n    }\n    if (bytes.length > 1 || bytes[0] > 1)\n        throw new InvalidBytesBooleanError(bytes);\n    return Boolean(bytes[0]);\n}\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToNumber(hex, opts);\n}\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromBytes.js.map","import { AbiDecodingDataSizeTooSmallError, AbiDecodingZeroDataError, InvalidAbiDecodingTypeError, } from '../../errors/abi.js';\nimport { checksumAddress, } from '../address/getAddress.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { sliceBytes } from '../data/slice.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToBigInt, bytesToBool, bytesToNumber, bytesToString, } from '../encoding/fromBytes.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { getArrayComponents } from './encodeAbiParameters.js';\nexport function decodeAbiParameters(params, data) {\n    const bytes = typeof data === 'string' ? hexToBytes(data) : data;\n    const cursor = createCursor(bytes);\n    if (size(bytes) === 0 && params.length > 0)\n        throw new AbiDecodingZeroDataError();\n    if (size(data) && size(data) < 32)\n        throw new AbiDecodingDataSizeTooSmallError({\n            data: typeof data === 'string' ? data : bytesToHex(data),\n            params: params,\n            size: size(data),\n        });\n    let consumed = 0;\n    const values = [];\n    for (let i = 0; i < params.length; ++i) {\n        const param = params[i];\n        cursor.setPosition(consumed);\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: 0,\n        });\n        consumed += consumed_;\n        values.push(data);\n    }\n    return values;\n}\nfunction decodeParameter(cursor, param, { staticPosition }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return decodeArray(cursor, { ...param, type }, { length, staticPosition });\n    }\n    if (param.type === 'tuple')\n        return decodeTuple(cursor, param, { staticPosition });\n    if (param.type === 'address')\n        return decodeAddress(cursor);\n    if (param.type === 'bool')\n        return decodeBool(cursor);\n    if (param.type.startsWith('bytes'))\n        return decodeBytes(cursor, param, { staticPosition });\n    if (param.type.startsWith('uint') || param.type.startsWith('int'))\n        return decodeNumber(cursor, param);\n    if (param.type === 'string')\n        return decodeString(cursor, { staticPosition });\n    throw new InvalidAbiDecodingTypeError(param.type, {\n        docsPath: '/docs/contract/decodeAbiParameters',\n    });\n}\n////////////////////////////////////////////////////////////////////\n// Type Decoders\nconst sizeOfLength = 32;\nconst sizeOfOffset = 32;\nfunction decodeAddress(cursor) {\n    const value = cursor.readBytes(32);\n    return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32];\n}\nfunction decodeArray(cursor, param, { length, staticPosition }) {\n    // If the length of the array is not known in advance (dynamic array),\n    // this means we will need to wonder off to the pointer and decode.\n    if (!length) {\n        // Dealing with a dynamic type, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const startOfData = start + sizeOfLength;\n        // Get the length of the array from the offset.\n        cursor.setPosition(start);\n        const length = bytesToNumber(cursor.readBytes(sizeOfLength));\n        // Check if the array has any dynamic children.\n        const dynamicChild = hasDynamicChild(param);\n        let consumed = 0;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n            // Otherwise, elements will be the size of their encoding (consumed bytes).\n            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));\n            const [data, consumed_] = decodeParameter(cursor, param, {\n                staticPosition: startOfData,\n            });\n            consumed += consumed_;\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance,\n    // and the length of an element deeply nested in the array is not known,\n    // we need to decode the offset of the array data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // Move cursor along to the next slot (next offset pointer).\n            cursor.setPosition(start + i * 32);\n            const [data] = decodeParameter(cursor, param, {\n                staticPosition: start,\n            });\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance and the array is deeply static,\n    // then we can just decode each element in sequence.\n    let consumed = 0;\n    const value = [];\n    for (let i = 0; i < length; ++i) {\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: staticPosition + consumed,\n        });\n        consumed += consumed_;\n        value.push(data);\n    }\n    return [value, consumed];\n}\nfunction decodeBool(cursor) {\n    return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32];\n}\nfunction decodeBytes(cursor, param, { staticPosition }) {\n    const [_, size] = param.type.split('bytes');\n    if (!size) {\n        // Dealing with dynamic types, so get the offset of the bytes data.\n        const offset = bytesToNumber(cursor.readBytes(32));\n        // Set position of the cursor to start of bytes data.\n        cursor.setPosition(staticPosition + offset);\n        const length = bytesToNumber(cursor.readBytes(32));\n        // If there is no length, we have zero data.\n        if (length === 0) {\n            // As we have gone wondering, restore to the original position + next slot.\n            cursor.setPosition(staticPosition + 32);\n            return ['0x', 32];\n        }\n        const data = cursor.readBytes(length);\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [bytesToHex(data), 32];\n    }\n    const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32));\n    return [value, 32];\n}\nfunction decodeNumber(cursor, param) {\n    const signed = param.type.startsWith('int');\n    const size = Number.parseInt(param.type.split('int')[1] || '256');\n    const value = cursor.readBytes(32);\n    return [\n        size > 48\n            ? bytesToBigInt(value, { signed })\n            : bytesToNumber(value, { signed }),\n        32,\n    ];\n}\nfunction decodeTuple(cursor, param, { staticPosition }) {\n    // Tuples can have unnamed components (i.e. they are arrays), so we must\n    // determine whether the tuple is named or unnamed. In the case of a named\n    // tuple, the value will be an object where each property is the name of the\n    // component. In the case of an unnamed tuple, the value will be an array.\n    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);\n    // Initialize the value to an object or an array, depending on whether the\n    // tuple is named or unnamed.\n    const value = hasUnnamedChild ? [] : {};\n    let consumed = 0;\n    // If the tuple has a dynamic child, we must first decode the offset to the\n    // tuple data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the tuple data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of referencing slot + offset.\n        const start = staticPosition + offset;\n        for (let i = 0; i < param.components.length; ++i) {\n            const component = param.components[i];\n            cursor.setPosition(start + consumed);\n            const [data, consumed_] = decodeParameter(cursor, component, {\n                staticPosition: start,\n            });\n            consumed += consumed_;\n            value[hasUnnamedChild ? i : component?.name] = data;\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the tuple has static children, we can just decode each component\n    // in sequence.\n    for (let i = 0; i < param.components.length; ++i) {\n        const component = param.components[i];\n        const [data, consumed_] = decodeParameter(cursor, component, {\n            staticPosition,\n        });\n        value[hasUnnamedChild ? i : component?.name] = data;\n        consumed += consumed_;\n    }\n    return [value, consumed];\n}\nfunction decodeString(cursor, { staticPosition }) {\n    // Get offset to start of string data.\n    const offset = bytesToNumber(cursor.readBytes(32));\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset;\n    cursor.setPosition(start);\n    const length = bytesToNumber(cursor.readBytes(32));\n    // If there is no length, we have zero data (empty string).\n    if (length === 0) {\n        cursor.setPosition(staticPosition + 32);\n        return ['', 32];\n    }\n    const data = cursor.readBytes(length, 32);\n    const value = bytesToString(trim(data));\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32);\n    return [value, 32];\n}\nfunction hasDynamicChild(param) {\n    const { type } = param;\n    if (type === 'string')\n        return true;\n    if (type === 'bytes')\n        return true;\n    if (type.endsWith('[]'))\n        return true;\n    if (type === 'tuple')\n        return param.components?.some(hasDynamicChild);\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents &&\n        hasDynamicChild({ ...param, type: arrayComponents[1] }))\n        return true;\n    return false;\n}\n//# sourceMappingURL=decodeAbiParameters.js.map","import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError, } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    if (signature === '0x')\n        throw new AbiDecodingZeroDataError();\n    const abi_ = [...(abi || []), solidityError, solidityPanic];\n    const abiItem = abi_.find((x) => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n    if (!abiItem)\n        throw new AbiErrorSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeErrorResult',\n        });\n    return {\n        abiItem,\n        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n            ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n            : undefined,\n        errorName: abiItem.name,\n    };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","import { AbiFunctionNotFoundError, AbiFunctionOutputsNotFoundError, } from '../../errors/abi.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/decodeFunctionResult';\nexport function decodeFunctionResult(parameters) {\n    const { abi, args, functionName, data } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({ abi, args, name: functionName });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    if (!abiItem.outputs)\n        throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath });\n    const values = decodeAbiParameters(abiItem.outputs, data);\n    if (values && values.length > 1)\n        return values;\n    if (values && values.length === 1)\n        return values[0];\n    return undefined;\n}\n//# sourceMappingURL=decodeFunctionResult.js.map","import { AbiEncodingArrayLengthMismatchError, AbiEncodingBytesSizeMismatchError, AbiEncodingLengthMismatchError, InvalidAbiEncodingTypeError, InvalidArrayError, } from '../../errors/abi.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { concat } from '../data/concat.js';\nimport { padHex } from '../data/pad.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { boolToHex, numberToHex, stringToHex, } from '../encoding/toHex.js';\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters(params, values) {\n    if (params.length !== values.length)\n        throw new AbiEncodingLengthMismatchError({\n            expectedLength: params.length,\n            givenLength: values.length,\n        });\n    // Prepare the parameters to determine dynamic types to encode.\n    const preparedParams = prepareParams({\n        params: params,\n        values: values,\n    });\n    const data = encodeParams(preparedParams);\n    if (data.length === 0)\n        return '0x';\n    return data;\n}\nfunction prepareParams({ params, values, }) {\n    const preparedParams = [];\n    for (let i = 0; i < params.length; i++) {\n        preparedParams.push(prepareParam({ param: params[i], value: values[i] }));\n    }\n    return preparedParams;\n}\nfunction prepareParam({ param, value, }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return encodeArray(value, { length, param: { ...param, type } });\n    }\n    if (param.type === 'tuple') {\n        return encodeTuple(value, {\n            param: param,\n        });\n    }\n    if (param.type === 'address') {\n        return encodeAddress(value);\n    }\n    if (param.type === 'bool') {\n        return encodeBool(value);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        const signed = param.type.startsWith('int');\n        return encodeNumber(value, { signed });\n    }\n    if (param.type.startsWith('bytes')) {\n        return encodeBytes(value, { param });\n    }\n    if (param.type === 'string') {\n        return encodeString(value);\n    }\n    throw new InvalidAbiEncodingTypeError(param.type, {\n        docsPath: '/docs/contract/encodeAbiParameters',\n    });\n}\nfunction encodeParams(preparedParams) {\n    // 1. Compute the size of the static part of the parameters.\n    let staticSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic)\n            staticSize += 32;\n        else\n            staticSize += size(encoded);\n    }\n    // 2. Split the parameters into static and dynamic parts.\n    const staticParams = [];\n    const dynamicParams = [];\n    let dynamicSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic) {\n            staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }));\n            dynamicParams.push(encoded);\n            dynamicSize += size(encoded);\n        }\n        else {\n            staticParams.push(encoded);\n        }\n    }\n    // 3. Concatenate static and dynamic parts.\n    return concat([...staticParams, ...dynamicParams]);\n}\nfunction encodeAddress(value) {\n    if (!isAddress(value))\n        throw new InvalidAddressError({ address: value });\n    return { dynamic: false, encoded: padHex(value.toLowerCase()) };\n}\nfunction encodeArray(value, { length, param, }) {\n    const dynamic = length === null;\n    if (!Array.isArray(value))\n        throw new InvalidArrayError(value);\n    if (!dynamic && value.length !== length)\n        throw new AbiEncodingArrayLengthMismatchError({\n            expectedLength: length,\n            givenLength: value.length,\n            type: `${param.type}[${length}]`,\n        });\n    let dynamicChild = false;\n    const preparedParams = [];\n    for (let i = 0; i < value.length; i++) {\n        const preparedParam = prepareParam({ param, value: value[i] });\n        if (preparedParam.dynamic)\n            dynamicChild = true;\n        preparedParams.push(preparedParam);\n    }\n    if (dynamic || dynamicChild) {\n        const data = encodeParams(preparedParams);\n        if (dynamic) {\n            const length = numberToHex(preparedParams.length, { size: 32 });\n            return {\n                dynamic: true,\n                encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n            };\n        }\n        if (dynamicChild)\n            return { dynamic: true, encoded: data };\n    }\n    return {\n        dynamic: false,\n        encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nfunction encodeBytes(value, { param }) {\n    const [, paramSize] = param.type.split('bytes');\n    const bytesSize = size(value);\n    if (!paramSize) {\n        let value_ = value;\n        // If the size is not divisible by 32 bytes, pad the end\n        // with empty bytes to the ceiling 32 bytes.\n        if (bytesSize % 32 !== 0)\n            value_ = padHex(value_, {\n                dir: 'right',\n                size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n            });\n        return {\n            dynamic: true,\n            encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n        };\n    }\n    if (bytesSize !== Number.parseInt(paramSize))\n        throw new AbiEncodingBytesSizeMismatchError({\n            expectedSize: Number.parseInt(paramSize),\n            value,\n        });\n    return { dynamic: false, encoded: padHex(value, { dir: 'right' }) };\n}\nfunction encodeBool(value) {\n    if (typeof value !== 'boolean')\n        throw new BaseError(`Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`);\n    return { dynamic: false, encoded: padHex(boolToHex(value)) };\n}\nfunction encodeNumber(value, { signed }) {\n    return {\n        dynamic: false,\n        encoded: numberToHex(value, {\n            size: 32,\n            signed,\n        }),\n    };\n}\nfunction encodeString(value) {\n    const hexValue = stringToHex(value);\n    const partsLength = Math.ceil(size(hexValue) / 32);\n    const parts = [];\n    for (let i = 0; i < partsLength; i++) {\n        parts.push(padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n            dir: 'right',\n        }));\n    }\n    return {\n        dynamic: true,\n        encoded: concat([\n            padHex(numberToHex(size(hexValue), { size: 32 })),\n            ...parts,\n        ]),\n    };\n}\nfunction encodeTuple(value, { param }) {\n    let dynamic = false;\n    const preparedParams = [];\n    for (let i = 0; i < param.components.length; i++) {\n        const param_ = param.components[i];\n        const index = Array.isArray(value) ? i : param_.name;\n        const preparedParam = prepareParam({\n            param: param_,\n            value: value[index],\n        });\n        preparedParams.push(preparedParam);\n        if (preparedParam.dynamic)\n            dynamic = true;\n    }\n    return {\n        dynamic,\n        encoded: dynamic\n            ? encodeParams(preparedParams)\n            : concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nexport function getArrayComponents(type) {\n    const matches = type.match(/^(.*)\\[(\\d+)?\\]$/);\n    return matches\n        ? // Return `null` if the array is dynamic.\n            [matches[2] ? Number(matches[2]) : null, matches[1]]\n        : undefined;\n}\n//# sourceMappingURL=encodeAbiParameters.js.map","import { AbiFunctionNotFoundError, } from '../../errors/abi.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionData';\nexport function prepareEncodeFunctionData(parameters) {\n    const { abi, args, functionName } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({\n            abi,\n            args,\n            name: functionName,\n        });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    return {\n        abi: [abiItem],\n        functionName: toFunctionSelector(formatAbiItem(abiItem)),\n    };\n}\n//# sourceMappingURL=prepareEncodeFunctionData.js.map","import { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js';\nexport function encodeFunctionData(parameters) {\n    const { args } = parameters;\n    const { abi, functionName } = (() => {\n        if (parameters.abi.length === 1 &&\n            parameters.functionName?.startsWith('0x'))\n            return parameters;\n        return prepareEncodeFunctionData(parameters);\n    })();\n    const abiItem = abi[0];\n    const signature = functionName;\n    const data = 'inputs' in abiItem && abiItem.inputs\n        ? encodeAbiParameters(abiItem.inputs, args ?? [])\n        : undefined;\n    return concatHex([signature, data ?? '0x']);\n}\n//# sourceMappingURL=encodeFunctionData.js.map","import { InvalidDefinitionTypeError, } from '../../errors/abi.js';\nexport function formatAbiItem(abiItem, { includeName = false } = {}) {\n    if (abiItem.type !== 'function' &&\n        abiItem.type !== 'event' &&\n        abiItem.type !== 'error')\n        throw new InvalidDefinitionTypeError(abiItem.type);\n    return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`;\n}\nexport function formatAbiParams(params, { includeName = false } = {}) {\n    if (!params)\n        return '';\n    return params\n        .map((param) => formatAbiParam(param, { includeName }))\n        .join(includeName ? ', ' : ',');\n}\nfunction formatAbiParam(param, { includeName }) {\n    if (param.type.startsWith('tuple')) {\n        return `(${formatAbiParams(param.components, { includeName })})${param.type.slice('tuple'.length)}`;\n    }\n    return param.type + (includeName && param.name ? ` ${param.name}` : '');\n}\n//# sourceMappingURL=formatAbiItem.js.map","import { AbiItemAmbiguityError } from '../../errors/abi.js';\nimport { isHex } from '../../utils/data/isHex.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { toEventSelector } from '../hash/toEventSelector.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nexport function getAbiItem(parameters) {\n    const { abi, args = [], name } = parameters;\n    const isSelector = isHex(name, { strict: false });\n    const abiItems = abi.filter((abiItem) => {\n        if (isSelector) {\n            if (abiItem.type === 'function')\n                return toFunctionSelector(abiItem) === name;\n            if (abiItem.type === 'event')\n                return toEventSelector(abiItem) === name;\n            return false;\n        }\n        return 'name' in abiItem && abiItem.name === name;\n    });\n    if (abiItems.length === 0)\n        return undefined;\n    if (abiItems.length === 1)\n        return abiItems[0];\n    let matchedAbiItem = undefined;\n    for (const abiItem of abiItems) {\n        if (!('inputs' in abiItem))\n            continue;\n        if (!args || args.length === 0) {\n            if (!abiItem.inputs || abiItem.inputs.length === 0)\n                return abiItem;\n            continue;\n        }\n        if (!abiItem.inputs)\n            continue;\n        if (abiItem.inputs.length === 0)\n            continue;\n        if (abiItem.inputs.length !== args.length)\n            continue;\n        const matched = args.every((arg, index) => {\n            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];\n            if (!abiParameter)\n                return false;\n            return isArgOfType(arg, abiParameter);\n        });\n        if (matched) {\n            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n            if (matchedAbiItem &&\n                'inputs' in matchedAbiItem &&\n                matchedAbiItem.inputs) {\n                const ambiguousTypes = getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);\n                if (ambiguousTypes)\n                    throw new AbiItemAmbiguityError({\n                        abiItem,\n                        type: ambiguousTypes[0],\n                    }, {\n                        abiItem: matchedAbiItem,\n                        type: ambiguousTypes[1],\n                    });\n            }\n            matchedAbiItem = abiItem;\n        }\n    }\n    if (matchedAbiItem)\n        return matchedAbiItem;\n    return abiItems[0];\n}\nexport function isArgOfType(arg, abiParameter) {\n    const argType = typeof arg;\n    const abiParameterType = abiParameter.type;\n    switch (abiParameterType) {\n        case 'address':\n            return isAddress(arg, { strict: false });\n        case 'bool':\n            return argType === 'boolean';\n        case 'function':\n            return argType === 'string';\n        case 'string':\n            return argType === 'string';\n        default: {\n            if (abiParameterType === 'tuple' && 'components' in abiParameter)\n                return Object.values(abiParameter.components).every((component, index) => {\n                    return isArgOfType(Object.values(arg)[index], component);\n                });\n            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n            // https://regexr.com/6v8hp\n            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))\n                return argType === 'number' || argType === 'bigint';\n            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n            // https://regexr.com/6va55\n            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n                return argType === 'string' || arg instanceof Uint8Array;\n            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n            // https://regexr.com/6va6i\n            if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n                return (Array.isArray(arg) &&\n                    arg.every((x) => isArgOfType(x, {\n                        ...abiParameter,\n                        // Pop off `[]` or `[M]` from end of type\n                        type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n                    })));\n            }\n            return false;\n        }\n    }\n}\nexport function getAmbiguousTypes(sourceParameters, targetParameters, args) {\n    for (const parameterIndex in sourceParameters) {\n        const sourceParameter = sourceParameters[parameterIndex];\n        const targetParameter = targetParameters[parameterIndex];\n        if (sourceParameter.type === 'tuple' &&\n            targetParameter.type === 'tuple' &&\n            'components' in sourceParameter &&\n            'components' in targetParameter)\n            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);\n        const types = [sourceParameter.type, targetParameter.type];\n        const ambiguous = (() => {\n            if (types.includes('address') && types.includes('bytes20'))\n                return true;\n            if (types.includes('address') && types.includes('string'))\n                return isAddress(args[parameterIndex], { strict: false });\n            if (types.includes('address') && types.includes('bytes'))\n                return isAddress(args[parameterIndex], { strict: false });\n            return false;\n        })();\n        if (ambiguous)\n            return types;\n    }\n    return;\n}\n//# sourceMappingURL=getAbiItem.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { isAddress } from './isAddress.js';\nexport function isAddressEqual(a, b) {\n    if (!isAddress(a, { strict: false }))\n        throw new InvalidAddressError({ address: a });\n    if (!isAddress(b, { strict: false }))\n        throw new InvalidAddressError({ address: b });\n    return a.toLowerCase() === b.toLowerCase();\n}\n//# sourceMappingURL=isAddressEqual.js.map","import { ChainDoesNotSupportContract, } from '../../errors/chain.js';\nexport function getChainContractAddress({ blockNumber, chain, contract: name, }) {\n    const contract = chain?.contracts?.[name];\n    if (!contract)\n        throw new ChainDoesNotSupportContract({\n            chain,\n            contract: { name },\n        });\n    if (blockNumber &&\n        contract.blockCreated &&\n        contract.blockCreated > blockNumber)\n        throw new ChainDoesNotSupportContract({\n            blockNumber,\n            chain,\n            contract: {\n                name,\n                blockCreated: contract.blockCreated,\n            },\n        });\n    return contract.address;\n}\n//# sourceMappingURL=getChainContractAddress.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e.code === ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError) {\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    }\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","import { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash;\n//# sourceMappingURL=toEventSelector.js.map","import { slice } from '../data/slice.js';\nimport { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn) => slice(toSignatureHash(fn), 0, 4);\n//# sourceMappingURL=toFunctionSelector.js.map","import { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from './keccak256.js';\nconst hash = (value) => keccak256(toBytes(value));\nexport function hashSignature(sig) {\n    return hash(sig);\n}\n//# sourceMappingURL=hashSignature.js.map","// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped(regex, string) {\n    const match = regex.exec(string);\n    return match?.groups;\n}\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nexport const isTupleRegex = /^\\(.+?\\).*?$/;\n//# sourceMappingURL=regex.js.map","import { execTyped } from '../regex.js';\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/;\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter(abiParameter) {\n    let type = abiParameter.type;\n    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n        type = '(';\n        const length = abiParameter.components.length;\n        for (let i = 0; i < length; i++) {\n            const component = abiParameter.components[i];\n            type += formatAbiParameter(component);\n            if (i < length - 1)\n                type += ', ';\n        }\n        const result = execTyped(tupleRegex, abiParameter.type);\n        type += `)${result?.array ?? ''}`;\n        return formatAbiParameter({\n            ...abiParameter,\n            type,\n        });\n    }\n    // Add `indexed` to type if in `abiParameter`\n    if ('indexed' in abiParameter && abiParameter.indexed)\n        type = `${type} indexed`;\n    // Return human-readable ABI parameter\n    if (abiParameter.name)\n        return `${type} ${abiParameter.name}`;\n    return type;\n}\n//# sourceMappingURL=formatAbiParameter.js.map","import { formatAbiParameter, } from './formatAbiParameter.js';\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters(abiParameters) {\n    let params = '';\n    const length = abiParameters.length;\n    for (let i = 0; i < length; i++) {\n        const abiParameter = abiParameters[i];\n        params += formatAbiParameter(abiParameter);\n        if (i !== length - 1)\n            params += ', ';\n    }\n    return params;\n}\n//# sourceMappingURL=formatAbiParameters.js.map","import { formatAbiItem } from 'abitype';\nimport { normalizeSignature, } from './normalizeSignature.js';\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def) => {\n    const def_ = (() => {\n        if (typeof def === 'string')\n            return def;\n        return formatAbiItem(def);\n    })();\n    return normalizeSignature(def_);\n};\n//# sourceMappingURL=toSignature.js.map","import { formatAbiParameters, } from './formatAbiParameters.js';\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem(abiItem) {\n    if (abiItem.type === 'function')\n        return `function ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n            ? ` ${abiItem.stateMutability}`\n            : ''}${abiItem.outputs.length\n            ? ` returns (${formatAbiParameters(abiItem.outputs)})`\n            : ''}`;\n    else if (abiItem.type === 'event')\n        return `event ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    else if (abiItem.type === 'error')\n        return `error ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    else if (abiItem.type === 'constructor')\n        return `constructor(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;\n    else if (abiItem.type === 'fallback')\n        return 'fallback()';\n    return 'receive() external payable';\n}\n//# sourceMappingURL=formatAbiItem.js.map","import { BaseError } from '../../errors/base.js';\nexport function normalizeSignature(signature) {\n    let active = true;\n    let current = '';\n    let level = 0;\n    let result = '';\n    let valid = false;\n    for (let i = 0; i < signature.length; i++) {\n        const char = signature[i];\n        // If the character is a separator, we want to reactivate.\n        if (['(', ')', ','].includes(char))\n            active = true;\n        // If the character is a \"level\" token, we want to increment/decrement.\n        if (char === '(')\n            level++;\n        if (char === ')')\n            level--;\n        // If we aren't active, we don't want to mutate the result.\n        if (!active)\n            continue;\n        // If level === 0, we are at the definition level.\n        if (level === 0) {\n            if (char === ' ' && ['event', 'function', ''].includes(result))\n                result = '';\n            else {\n                result += char;\n                // If we are at the end of the definition, we must be finished.\n                if (char === ')') {\n                    valid = true;\n                    break;\n                }\n            }\n            continue;\n        }\n        // Ignore spaces\n        if (char === ' ') {\n            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n                current = '';\n                active = false;\n            }\n            continue;\n        }\n        result += char;\n        current += char;\n    }\n    if (!valid)\n        throw new BaseError('Unable to normalize signature.');\n    return result;\n}\n//# sourceMappingURL=normalizeSignature.js.map","import { hashSignature } from './hashSignature.js';\nimport { toSignature } from './toSignature.js';\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn) {\n    return hashSignature(toSignature(fn));\n}\n//# sourceMappingURL=toSignatureHash.js.map","const schedulerCache = /*#__PURE__*/ new Map();\nexport function createBatchScheduler({ fn, id, shouldSplitBatch, wait = 0, sort, }) {\n    const exec = async () => {\n        const scheduler = getScheduler();\n        flush();\n        const args = scheduler.map(({ args }) => args);\n        if (args.length === 0)\n            return;\n        fn(args)\n            .then((data) => {\n            if (sort && Array.isArray(data))\n                data.sort(sort);\n            for (let i = 0; i < scheduler.length; i++) {\n                const { pendingPromise } = scheduler[i];\n                pendingPromise.resolve?.([data[i], data]);\n            }\n        })\n            .catch((err) => {\n            for (let i = 0; i < scheduler.length; i++) {\n                const { pendingPromise } = scheduler[i];\n                pendingPromise.reject?.(err);\n            }\n        });\n    };\n    const flush = () => schedulerCache.delete(id);\n    const getBatchedArgs = () => getScheduler().map(({ args }) => args);\n    const getScheduler = () => schedulerCache.get(id) || [];\n    const setScheduler = (item) => schedulerCache.set(id, [...getScheduler(), item]);\n    return {\n        flush,\n        async schedule(args) {\n            const pendingPromise = {};\n            const promise = new Promise((resolve, reject) => {\n                pendingPromise.resolve = resolve;\n                pendingPromise.reject = reject;\n            });\n            const split = shouldSplitBatch?.([...getBatchedArgs(), args]);\n            if (split)\n                exec();\n            const hasActiveScheduler = getScheduler().length > 0;\n            if (hasActiveScheduler) {\n                setScheduler({ args, pendingPromise });\n                return promise;\n            }\n            setScheduler({ args, pendingPromise });\n            setTimeout(exec, wait);\n            return promise;\n        },\n    };\n}\n//# sourceMappingURL=createBatchScheduler.js.map","import { InvalidAddressError, } from '../errors/address.js';\nimport { InvalidBytesLengthError, } from '../errors/data.js';\nimport { AccountStateConflictError, StateAssignmentConflictError, } from '../errors/stateOverride.js';\nimport { isAddress } from './address/isAddress.js';\nimport { numberToHex } from './encoding/toHex.js';\nexport function serializeStateMapping(stateMapping) {\n    if (!stateMapping || stateMapping.length === 0)\n        return undefined;\n    return stateMapping.reduce((acc, { slot, value }) => {\n        if (slot.length !== 66)\n            throw new InvalidBytesLengthError({\n                size: slot.length,\n                targetSize: 66,\n                type: 'hex',\n            });\n        if (value.length !== 66)\n            throw new InvalidBytesLengthError({\n                size: value.length,\n                targetSize: 66,\n                type: 'hex',\n            });\n        acc[slot] = value;\n        return acc;\n    }, {});\n}\nexport function serializeAccountStateOverride(parameters) {\n    const { balance, nonce, state, stateDiff, code } = parameters;\n    const rpcAccountStateOverride = {};\n    if (code !== undefined)\n        rpcAccountStateOverride.code = code;\n    if (balance !== undefined)\n        rpcAccountStateOverride.balance = numberToHex(balance);\n    if (nonce !== undefined)\n        rpcAccountStateOverride.nonce = numberToHex(nonce);\n    if (state !== undefined)\n        rpcAccountStateOverride.state = serializeStateMapping(state);\n    if (stateDiff !== undefined) {\n        if (rpcAccountStateOverride.state)\n            throw new StateAssignmentConflictError();\n        rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff);\n    }\n    return rpcAccountStateOverride;\n}\nexport function serializeStateOverride(parameters) {\n    if (!parameters)\n        return undefined;\n    const rpcStateOverride = {};\n    for (const { address, ...accountState } of parameters) {\n        if (!isAddress(address, { strict: false }))\n            throw new InvalidAddressError({ address });\n        if (rpcStateOverride[address])\n            throw new AccountStateConflictError({ address: address });\n        rpcStateOverride[address] = serializeAccountStateOverride(accountState);\n    }\n    return rpcStateOverride;\n}\n//# sourceMappingURL=stateOverride.js.map","export const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {\n    const value = typeof value_ === 'bigint' ? value_.toString() : value_;\n    return typeof replacer === 'function' ? replacer(key, value) : value;\n}, space);\n//# sourceMappingURL=stringify.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map"],"names":["parseAccount","account","address","type","aggregate3Signature","async","call","client","args","account_","batch","Boolean","multicall","blockNumber","blockTag","accessList","blobs","data","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","value","stateOverride","rest","undefined","assertRequest","block","rpcStateOverride","chainFormat","chain","formatters","transactionRequest","format","request","extract","from","request_","startsWith","Object","values","filter","x","length","shouldPerformMulticall","batchSize","wait","multicallAddress","multicallAddress_","getChainContractAddress","contract","blockNumberHex","schedule","createBatchScheduler","id","uid","shouldSplitBatch","size","reduce","fn","requests","calls","map","allowFailure","callData","target","calldata","encodeFunctionData","abi","functionName","method","params","decodeFunctionResult","returnData","success","scheduleMulticall","err","response","error","walk","getRevertErrorData","offchainLookup","offchainLookupSignature","ccipRead","slice","docsPath","cause","getNodeError","getCallError","multicall3Abi","inputs","components","name","outputs","stateMutability","universalResolverErrors","universalResolverResolveAbi","universalResolverReverseAbi","textResolverAbi","addressResolverAbi","universalSignatureValidatorAbi","internalType","panicReasons","solidityError","solidityPanic","AbiConstructorNotFoundError","constructor","super","join","defineProperty","this","enumerable","configurable","writable","AbiConstructorParamsNotFoundError","AbiDecodingDataSizeTooSmallError","metaMessages","includeName","AbiDecodingZeroDataError","AbiEncodingArrayLengthMismatchError","expectedLength","givenLength","AbiEncodingBytesSizeMismatchError","expectedSize","AbiEncodingLengthMismatchError","AbiErrorSignatureNotFoundError","signature","AbiEventSignatureEmptyTopicsError","AbiEventSignatureNotFoundError","AbiEventNotFoundError","eventName","AbiFunctionNotFoundError","AbiFunctionOutputsNotFoundError","AbiItemAmbiguityError","y","abiItem","BytesSizeMismatchError","givenSize","DecodeLogDataMismatch","DecodeLogTopicsMismatch","param","InvalidAbiEncodingTypeError","InvalidAbiDecodingTypeError","InvalidArrayError","InvalidDefinitionTypeError","formatAbiItemWithArgs","includeFunctionName","input","i","stringify","CallExecutionError","prettyArgs","formatEther","nativeCurrency","symbol","formatGwei","shortMessage","ContractFunctionExecutionError","contractAddress","sender","getAbiItem","formattedArgs","functionWithParams","formatAbiItem","function","Array","keys","ContractFunctionRevertedError","message","decodedData","reason","decodeErrorResult","errorName","errorArgs","firstArg","errorWithParams","ContractFunctionZeroDataError","RawContractError","HttpRequestError","body","details","headers","status","url","RpcRequestError","code","TimeoutError","AccountStateConflictError","StateAssignmentConflictError","prettyStateMapping","stateMapping","pretty","slot","prettyStateOverride","state","val","balance","stateDiff","UrlRequiredError","createIdStore","current","take","reset","idCache","getHttpRpcClient","options","onRequest","onResponse","timeout","fetchOptions","signal","signal_","errorInstance","Error","Promise","resolve","reject","timeoutId","controller","AbortController","setTimeout","abort","clearTimeout","withTimeout","init","isArray","jsonrpc","Request","fetch","get","json","text","JSON","parse","ok","statusText","RpcError","ProviderRpcError","ParseRpcError","InvalidRequestRpcError","MethodNotFoundRpcError","InvalidParamsRpcError","InternalRpcError","InvalidInputRpcError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","TransactionRejectedRpcError","MethodNotSupportedRpcError","LimitExceededRpcError","JsonRpcVersionUnsupportedError","UserRejectedRequestError","UnauthorizedProviderError","UnsupportedProviderMethodError","ProviderDisconnectedError","ChainDisconnectedError","SwitchChainError","UnknownRpcError","time","res","withRetry","delay","delay_","retryCount","shouldRetry","attemptRetry","count","retry","buildRequest","overrideOptions","retryDelay","err_","retryAfter","match","Number","parseInt","http","config","key","onFetchRequest","onFetchResponse","retryCount_","timeout_","url_","rpcUrls","default","rpcClient","createTransport","sort","a","b","result","buffer","index","Math","random","toString","substring","isNullUniversalResolverError","callType","e","includes","encodedLabelToLabelhash","label","indexOf","hash","isHex","namehash","Uint8Array","fill","labels","split","hashFromEncodedLabel","hashed","toBytes","keccak256","concat","labelhash","packetToBytes","packet","replace","bytes","byteLength","offset","list","encoded","set","getAction","action","EXECUTION_REVERTED_ERROR_CODE","getContractError","readContract","parameters","EnsAvatarInvalidMetadataError","EnsAvatarInvalidNftUriError","EnsAvatarUriResolutionError","uri","EnsAvatarUnsupportedNamespaceError","namespace","networkRegex","ipfsHashRegex","base64Regex","dataURIRegex","getGateway","custom","defaultGateway","endsWith","resolveAvatarUri","gatewayUrls","isEncoded","test","isOnChain","ipfsGateway","ipfs","arweaveGateway","arweave","networkRegexMatch","protocol","subpath","subtarget","groups","isIPNS","isIPFS","replacedUri","parsedUri","btoa","getJsonImage","image","image_url","image_data","parseAvatarUri","resolvedURI","isImage","contentType","globalThis","hasOwnProperty","img","Image","onload","onerror","src","isImageUri","parseAvatarRecord","record","nft","uri_","reference","asset_namespace","tokenID","eip_namespace","chainID","erc_namespace","toLowerCase","parseNftUri","nftUri","BigInt","getNftTokenUri","resolvedNftUri","encodedJson","atob","uriTokenId","padStart","then","getMetadataAvatarUri","parseNftAvatarUri","getEnsText","strict","universalResolverAddress","universalResolverAddress_","readContractParameters","toHex","readContractAction","createFilterRequestScope","requestMap","transport","method_","FilterTypeNotSupportedError","encodeEventTopics","item","definition","toEventSelector","topics","indexedInputs","indexed","args_","_","j","encodeArg","encodeAbiParameters","createContractEventFilter","fromBlock","toBlock","getRequest","createEventFilter","event","events","events_","flatMap","createPendingTransactionFilter","EstimateGasExecutionError","BaseFeeScalarError","Eip1559FeesNotSupportedError","MaxFeePerGasTooLowError","BlockNotFoundError","blockHash","identifier","blockTag_","includeTransactions","includeTransactions_","getGasPrice","internal_estimateMaxPriorityFeePerGas","block_","fees","defaultPriorityFee","maxPriorityFeePerGasHex","all","baseFeePerGas","internal_estimateFeesPerGas","baseFeeMultiplier","denominator","multiply","base","ceil","estimateFeesPerGas","getTransactionCount","getChainId","chainIdHex","defaultParameters","prepareTransactionRequest","chainId","kzg","getBlock","commitments","blobsToCommitments","versionedHashes","commitmentsToVersionedHashes","blobVersionedHashes","proofs","blobsToProofs","sidecars","toBlobSidecars","getTransactionType","gasPrice_","estimateGas","getEstimateGasError","promiseCache","Map","responseCache","withCache","cacheKey","cacheTime","POSITIVE_INFINITY","cache","buildCache","clear","delete","promise","Date","getTime","created","getBlockNumber","decodeEventLog","strict_","argTopics","find","isUnnamed","some","topic","decodeTopic","nonIndexedInputs","decodeAbiParameters","parseEventLogs","logs","log","getLogs","formattedLogs","getContractEvents","getFeeHistory","blockCount","rewardPercentiles","feeHistory","gasUsedRatio","oldestBlock","reward","formatFeeHistory","getFilterChanges","_client","getProof","storageKeys","proof","storageProof","formatProof","getTransaction","transaction","getTransactionReceipt","receipt","transactionReceipt","uninstallFilter","presignMessagePrefix","hashMessage","to_","messageBytes","raw","prefixBytes","universalSignatureValidatorByteCode","encodeDeployData","bytecode","description","_1n","_2n","u8a","hexes","bytesToHex","hex","hexToNumber","hexToBytes","len","array","hexByte","byte","isNaN","reverse","n","numberToBytesLE","title","arrays","r","sum","pad","forEach","equalBytes","b1","b2","bitMask","u8n","u8fr","arr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","h","reseed","seed","gen","out","sl","push","pred","validatorFns","bigint","boolean","string","stringOrUint8Array","isSafeInteger","field","object","Fp","isValid","outputLen","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","String","entries","number","lengths","create","blockLen","exists","instance","checkFinished","destroyed","finished","output","min","crypto","createView","DataView","byteOffset","rotr","word","shift","Uint32Array","str","TextEncoder","encode","Hash","clone","_cloneInto","hashCons","hashC","msg","update","digest","tmp","bytesLength","getRandomValues","SHA2","padOffset","isLE","pos","view","subarray","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","l","setUint32","oview","outLen","destroy","Maj","c","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","_3n","_4n","_5n","_8n","pow","num","power","modulo","pow2","invert","u","q","m","FpSqrt","P","p1div4","root","eql","sqr","c1","n2","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","HMAC","_key","iHash","oHash","buf","getPrototypeOf","hmac","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","freeze","p","bytesToNumberBE","b2n","h2b","DER","Err","_parseInt","d","toSig","sBytes","s","rBytesLeft","hexFromSig","sig","shl","rhl","rl","weierstrassPoints","opts","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","add","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","pointPrecomputes","assertPrjPoint","other","Point","px","py","pz","static","is0","points","toInv","invertBatch","fromAffine","assertValidity","privateKey","BASE","_setWindowSize","windowSize","_WINDOW_SIZE","left","right","hasEvenY","isOdd","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","double","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f","f1p","f2p","constTimeNegate","normalizeZ","multiplyAndAddUnsafe","iz","z","inv","ax","ay","zz","cofactor","toRawBytes","isCompressed","_bits","bits","condition","W","windows","elm","precomputeWindow","window","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","precomputesMap","transform","ProjectivePoint","weierstrass","curveDef","randomBytes","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrt","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","fromHex","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getPublicKey","fromPrivateKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","verify","publicKey","sg","_sig","fromDER","derError","fromCompact","is","getHash","msgs","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","bitLen","redef","sqrtP","lhs","rhs","FpPow","div","sqrN","addN","subN","mulN","lst","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","Field","secp256k1","defHash","createCurve","a1","a2","POW_2_128","c2","verifyHash","callRequest","signatureHex","yParity","yParity_","serializeSignature","a_","b_","bytesRegex","integerRegex","getTypesForEIP712Domain","domain","version","verifyingContract","salt","hashTypedData","primaryType","types","EIP712Domain","validateData","struct","integerMatch","_type","size_","signed","isAddress","bytesMatch","validateTypedData","parts","hashStruct","encodeData","encodedTypes","encodedValues","hashType","encodeField","encodedHashType","unsortedDeps","findTypeDependencies","deps","t","encodeType","primaryType_","results","Set","has","lastIndexOf","parsedType","typeValuePairs","listenersCache","cleanupCache","callbackCount","observe","observerId","callbacks","callbackId","getListeners","unwatch","cleanup","listeners","cb","unsubscribe","fns","emit","listener","poll","emitOnBegin","initialWaitTime","interval","active","unpoll","initialWait","watch","watchBlockNumber","emitMissed","onBlockNumber","onError","poll_","pollingInterval","prevBlockNumber","transports","unsubscribe_","subscribe","onData","prefixRegex","suffixRegex","verifySiweMessage","scheme","parsed","statement","expirationTime","issuedAt","notBefore","requestId","suffix","resources","parseSiweMessage","isAddressEqual","validateSiweMessage","publicActions","createBlockFilter","estimateContractGas","getBalance","getBlobBaseFee","baseFee","getBlockTransactionCount","getBytecode","getEnsAddress","coinType","functionData","trim","getEnsAvatar","assetGatewayUrls","getEnsName","reverseNode","resolvedAddress","getEnsResolver","resolverAddress","getFilterLogs","estimateMaxPriorityFeePerGas","getStorageAt","getTransactionConfirmations","transactionBlockNumber","batchSize_","contracts","chunkedCalls","currentChunk","currentChunkSize","aggregate3Results","allSettled","aggregate3Result","sendRawTransaction","serializedTransaction","simulateContract","dataSuffix","verifyMessage","verifyTypedData","waitForTransactionReceipt","confirmations","onReplaced","replacedTransaction","retrying","_unobserve","_unwatch","blockNumber_","done","replacementTransaction","transactions","watchBlocks","onBlock","enablePolling","prevBlock","subscribeBlocks","watchContractEvent","onLogs","previousBlockNumber","initialized","pollContractEvent","formatted","subscribeContractEvent","watchEvent","subscribeEvent","watchPendingTransactions","onTransactions","hashes","subscribePendingTransactions","createPublicClient","assign","extend","extendFn","extended","combined","createClient","extractChain","chains","bytesToBigInt","bytesToBool","bytes_","bytesToNumber","bytesToString","dir","TextDecoder","decode","cursor","consumed","setPosition","consumed_","decodeParameter","staticPosition","arrayComponents","start","readBytes","sizeOfOffset","startOfData","sizeOfLength","dynamicChild","hasDynamicChild","decodeArray","hasUnnamedChild","component","decodeTuple","decodeAddress","decodeBool","decodeBytes","decodeNumber","decodeString","preparedParams","prepareParam","prepareParams","encodeParams","getArrayComponents","dynamic","preparedParam","encodeArray","param_","encodeTuple","encodeAddress","encodeBool","encodeNumber","paramSize","bytesSize","value_","encodeBytes","hexValue","partsLength","encodeString","staticSize","staticParams","dynamicParams","dynamicSize","matches","toFunctionSelector","prepareEncodeFunctionData","formatAbiParams","formatAbiParam","isSelector","abiItems","matchedAbiItem","every","arg","abiParameter","isArgOfType","ambiguousTypes","getAmbiguousTypes","argType","abiParameterType","sourceParameters","targetParameters","parameterIndex","sourceParameter","targetParameter","blockCreated","executionRevertedError","nodeMessage","extract_","tupleRegex","formatAbiParameter","regex","exec","execTyped","formatAbiParameters","abiParameters","toSignature","def","level","valid","char","normalizeSignature","toSignatureHash","schedulerCache","scheduler","getScheduler","flush","pendingPromise","catch","setScheduler","serializeStateMapping","targetSize","serializeAccountStateOverride","rpcAccountStateOverride","serializeStateOverride","accountState","replacer","space"],"sourceRoot":""}
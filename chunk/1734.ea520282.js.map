{"version":3,"file":"chunk/1734.ea520282.js","mappings":"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","sources":["webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/kzg.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/address.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/blob.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/chain.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/cursor.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/node.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/errors/transaction.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/address/getAddress.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/address/isAddress.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/constants/blob.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/blob/toBlobs.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/chain/defineChain.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/cursor.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/data/concat.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/data/slice.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/block.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/formatter.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/log.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/transaction.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/formatters/transactionRequest.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/_u64.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/sha3.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/keccak256.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/_sha2.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/sha256.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/hash/sha256.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/lru.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","webpack://@snx-v3/governance/../../node_modules/viem/_esm/utils/unit/formatGwei.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/_assert.js","webpack://@snx-v3/governance/../../node_modules/viem/node_modules/@noble/hashes/esm/utils.js"],"sourcesContent":["// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48;\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48;\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map"],"names":["versionedHashVersionKzg","InvalidAddressError","constructor","address","super","metaMessages","Object","defineProperty","this","enumerable","configurable","writable","value","BlobSizeTooLargeError","maxSize","size","EmptyBlobError","InvalidVersionedHashSizeError","hash","InvalidVersionedHashVersionError","version","ChainDoesNotSupportContract","blockNumber","chain","contract","name","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","chainId","NegativeOffsetError","offset","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit","ExecutionRevertedError","cause","message","reason","replace","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","join","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","shortMessage","prettyPrint","args","entries","map","key","undefined","filter","Boolean","maxLength","reduce","acc","Math","max","padEnd","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","floor","TransactionNotFoundError","blockHash","blockTag","index","identifier","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","checksumAddressCache","checksumAddress","address_","has","get","hexAddress","toLowerCase","substring","split","i","toUpperCase","result","set","addressRegex","isAddressCache","isAddress","options","strict","test","blobsToCommitments","parameters","kzg","to","blobs","x","commitments","blob","push","Uint8Array","from","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","commitmentToVersionedHash","versionedHash","sha256","commitmentsToVersionedHashes","hashes","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","toBlobSidecars","data","size_","active","bytes","slice","pushByte","pushBytes","toBlobs","sidecars","proof","defineChain","formatters","fees","serializers","staticCursor","dataView","DataView","ArrayBuffer","positionReadCount","Map","recursiveReadCount","recursiveReadLimit","Number","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","byte","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","create","buffer","byteOffset","byteLength","concat","values","concatHex","arr","concatBytes","start","end","value_","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","formatBlock","block","transactions","baseFeePerGas","BigInt","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","logsBloom","number","timestamp","totalDifficulty","defineBlock","defineFormatter","type","format","exclude","overrides","formatted","formatLog","log","eventName","logIndex","transactionHash","transactionIndex","transactionType","formatTransaction","transaction_","gasPrice","maxFeePerBlobGas","typeHex","yParity","accessList","defineTransaction","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","contractAddress","cumulativeGasUsed","effectiveGasPrice","logs","status","blobGasPrice","defineTransactionReceipt","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","request","rpcRequest","blobVersionedHashes","defineTransactionRequest","U32_MASK64","_32n","fromBig","n","le","h","l","lst","Ah","Uint32Array","Al","rotlSH","s","rotlSL","rotlBH","rotlBL","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","blockLen","suffix","outputLen","enableXOF","rounds","pos","posOut","finished","destroyed","Error","state","state32","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","keccakP","update","len","take","min","finish","writeInto","out","bufferOut","xofInto","xof","digestInto","destroy","digest","_cloneInto","gen","keccak_256","keccak256","to_","isHex","toBytes","toHex","SHA2","padOffset","isLE","view","process","roundClean","setBigUint64","_u32_max","wh","wl","oview","outLen","res","Maj","a","b","c","SHA256_K","IV","SHA256_W","SHA256","A","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","LruMap","delete","keys","next","getTransactionType","formatGwei","wei","unit","isSafeInteger","lengths","includes","exists","instance","checkFinished","output","u8a","u32","createView","rotr","word","str","TextEncoder","encode","utf8ToBytes","Hash","clone","wrapConstructor","hashCons","hashC","msg","tmp"],"sourceRoot":""}